// Generated by Hebron at 8/29/2023 7:59:26 AM

using System;
using System.Runtime.InteropServices;

namespace UfbxSharp
{
	unsafe partial class Ufbx
	{
		public const int UFBX_ROTATION_ORDER_COUNT = 0;
		public const int UFBX_DOM_VALUE_TYPE_COUNT = 0;
		public const int UFBX_PROP_TYPE_COUNT = 0;
		public const int UFBX_ELEMENT_TYPE_COUNT = 0;
		public const int UFBX_INHERIT_TYPE_COUNT = 0;
		public const int UFBX_SUBDIVISION_DISPLAY_MODE_COUNT = 0;
		public const int UFBX_SUBDIVISION_BOUNDARY_COUNT = 0;
		public const int UFBX_LIGHT_TYPE_COUNT = 0;
		public const int UFBX_LIGHT_DECAY_COUNT = 0;
		public const int UFBX_LIGHT_AREA_SHAPE_COUNT = 0;
		public const int UFBX_PROJECTION_MODE_COUNT = 0;
		public const int UFBX_ASPECT_MODE_COUNT = 0;
		public const int UFBX_APERTURE_MODE_COUNT = 0;
		public const int UFBX_GATE_FIT_COUNT = 0;
		public const int UFBX_APERTURE_FORMAT_COUNT = 0;
		public const int UFBX_COORDINATE_AXIS_COUNT = 0;
		public const int UFBX_NURBS_TOPOLOGY_COUNT = 0;
		public const int UFBX_MARKER_TYPE_COUNT = 0;
		public const int UFBX_LOD_DISPLAY_COUNT = 0;
		public const int UFBX_SKINNING_METHOD_COUNT = 0;
		public const int UFBX_CACHE_FILE_FORMAT_COUNT = 0;
		public const int UFBX_CACHE_DATA_FORMAT_COUNT = 0;
		public const int UFBX_CACHE_DATA_ENCODING_COUNT = 0;
		public const int UFBX_CACHE_INTERPRETATION_COUNT = 0;
		public const int UFBX_SHADER_TYPE_COUNT = 0;
		public const int UFBX_MATERIAL_FBX_MAP_COUNT = 0;
		public const int UFBX_MATERIAL_PBR_MAP_COUNT = 0;
		public const int UFBX_MATERIAL_FEATURE_COUNT = 0;
		public const int UFBX_TEXTURE_TYPE_COUNT = 0;
		public const int UFBX_BLEND_MODE_COUNT = 0;
		public const int UFBX_WRAP_MODE_COUNT = 0;
		public const int UFBX_SHADER_TEXTURE_TYPE_COUNT = 0;
		public const int UFBX_INTERPOLATION_COUNT = 0;
		public const int UFBX_CONSTRAINT_TYPE_COUNT = 0;
		public const int UFBX_CONSTRAINT_AIM_UP_TYPE_COUNT = 0;
		public const int UFBX_CONSTRAINT_IK_POLE_TYPE_COUNT = 0;
		public const int UFBX_EXPORTER_COUNT = 0;
		public const int UFBX_FILE_FORMAT_COUNT = 0;
		public const int UFBX_WARNING_TYPE_COUNT = 0;
		public const int UFBX_TIME_MODE_COUNT = 0;
		public const int UFBX_TIME_PROTOCOL_COUNT = 0;
		public const int UFBX_SNAP_MODE_COUNT = 0;
		public const int UFBX_OPEN_FILE_TYPE_COUNT = 0;
		public const int UFBX_ERROR_TYPE_COUNT = 0;
		public const int UFBX_INDEX_ERROR_HANDLING_COUNT = 0;
		public const int UFBX_UNICODE_ERROR_HANDLING_COUNT = 0;
		public const int UFBX_GEOMETRY_TRANSFORM_HANDLING_COUNT = 0;
		public const int UFBX_SPACE_CONVERSION_COUNT = 0;
		public const int UFBXI_HUFF_SYM_END = 32;
		public const int UFBXI_HUFF_SYM_MATCH = 64;
		public const int UFBXI_HUFF_SYM_FAST = 128;
		public const int UFBXI_VALUE_NONE = 0;
		public const int UFBXI_VALUE_NUMBER = 1;
		public const int UFBXI_VALUE_STRING = 2;
		public const int UFBXI_VALUE_ARRAY = 3;
		public const int UFBXI_OBJ_ATTRIB_POSITION = 0;
		public const int UFBXI_OBJ_ATTRIB_UV = 1;
		public const int UFBXI_OBJ_ATTRIB_NORMAL = 2;
		public const int UFBXI_OBJ_ATTRIB_COLOR = 3;
		public const int UFBXI_XML_CTYPE_WHITESPACE = 1;
		public const int UFBXI_XML_CTYPE_SINGLE_QUOTE = 2;
		public const int UFBXI_XML_CTYPE_DOUBLE_QUOTE = 4;
		public const int UFBXI_XML_CTYPE_NAME_END = 8;
		public const int UFBXI_XML_CTYPE_TAG_START = 16;
		public const int UFBXI_XML_CTYPE_END_OF_FILE = 32;
		public const int UFBXI_PARSE_ROOT = 0;
		public const int UFBXI_PARSE_FBX_HEADER_EXTENSION = 1;
		public const int UFBXI_PARSE_DEFINITIONS = 2;
		public const int UFBXI_PARSE_OBJECTS = 3;
		public const int UFBXI_PARSE_CONNECTIONS = 4;
		public const int UFBXI_PARSE_RELATIONS = 5;
		public const int UFBXI_PARSE_TAKES = 6;
		public const int UFBXI_PARSE_FBX_VERSION = 7;
		public const int UFBXI_PARSE_MODEL = 8;
		public const int UFBXI_PARSE_GEOMETRY = 9;
		public const int UFBXI_PARSE_NODE_ATTRIBUTE = 10;
		public const int UFBXI_PARSE_LEGACY_MODEL = 11;
		public const int UFBXI_PARSE_LEGACY_SWITCHER = 12;
		public const int UFBXI_PARSE_LEGACY_SCENE_PERSISTENCE = 13;
		public const int UFBXI_PARSE_REFERENCES = 14;
		public const int UFBXI_PARSE_REFERENCE = 15;
		public const int UFBXI_PARSE_ANIMATION_CURVE = 16;
		public const int UFBXI_PARSE_DEFORMER = 17;
		public const int UFBXI_PARSE_ASSOCIATE_MODEL = 18;
		public const int UFBXI_PARSE_LEGACY_LINK = 19;
		public const int UFBXI_PARSE_POSE = 20;
		public const int UFBXI_PARSE_POSE_NODE = 21;
		public const int UFBXI_PARSE_TEXTURE = 22;
		public const int UFBXI_PARSE_VIDEO = 23;
		public const int UFBXI_PARSE_LAYERED_TEXTURE = 24;
		public const int UFBXI_PARSE_SELECTION_NODE = 25;
		public const int UFBXI_PARSE_COLLECTION = 26;
		public const int UFBXI_PARSE_UNKNOWN_OBJECT = 27;
		public const int UFBXI_PARSE_LAYER_ELEMENT_NORMAL = 28;
		public const int UFBXI_PARSE_LAYER_ELEMENT_BINORMAL = 29;
		public const int UFBXI_PARSE_LAYER_ELEMENT_TANGENT = 30;
		public const int UFBXI_PARSE_LAYER_ELEMENT_UV = 31;
		public const int UFBXI_PARSE_LAYER_ELEMENT_COLOR = 32;
		public const int UFBXI_PARSE_LAYER_ELEMENT_VERTEX_CREASE = 33;
		public const int UFBXI_PARSE_LAYER_ELEMENT_EDGE_CREASE = 34;
		public const int UFBXI_PARSE_LAYER_ELEMENT_SMOOTHING = 35;
		public const int UFBXI_PARSE_LAYER_ELEMENT_VISIBILITY = 36;
		public const int UFBXI_PARSE_LAYER_ELEMENT_POLYGON_GROUP = 37;
		public const int UFBXI_PARSE_LAYER_ELEMENT_HOLE = 38;
		public const int UFBXI_PARSE_LAYER_ELEMENT_MATERIAL = 39;
		public const int UFBXI_PARSE_LAYER_ELEMENT_OTHER = 40;
		public const int UFBXI_PARSE_GEOMETRY_UV_INFO = 41;
		public const int UFBXI_PARSE_SHAPE = 42;
		public const int UFBXI_PARSE_TAKE = 43;
		public const int UFBXI_PARSE_TAKE_OBJECT = 44;
		public const int UFBXI_PARSE_CHANNEL = 45;
		public const int UFBXI_PARSE_UNKNOWN = 46;
		public const int UFBXI_ARRAY_FLAG_RESULT = 1;
		public const int UFBXI_ARRAY_FLAG_TMP_BUF = 2;
		public const int UFBXI_ARRAY_FLAG_PAD_BEGIN = 4;
		public const int UFBXI_ARRAY_FLAG_ACCURATE_F32 = 8;
		public const int UFBXI_MAT_TRANSFORM_IDENTITY = 0;
		public const int UFBXI_MAT_TRANSFORM_INVERT_X = 1;
		public const int UFBXI_MAT_TRANSFORM_UNKNOWN_SHININESS = 2;
		public const int UFBXI_MAT_TRANSFORM_BLENDER_OPACITY = 3;
		public const int UFBXI_MAT_TRANSFORM_BLENDER_SHININESS = 4;
		public const int UFBXI_MAT_TRANSFORM_COUNT = 5;
		public const int UFBXI_SHADER_MAPPING_DEFAULT_W_1 = 1;
		public const int UFBXI_SHADER_MAPPING_WIDEN_TO_RGB = 2;
		public const int UFBXI_SHADER_FEATURE_INVERTED = 1;
		public const int UFBXI_SHADER_FEATURE_IF_EXISTS = 2;
		public const int UFBXI_SHADER_FEATURE_IF_TEXTURE = 4;
		public const int UFBXI_SHADER_FEATURE_IF_AROUND_1 = 8;
		public const int UFBXI_SHADER_FEATURE_IF_EXISTS_OR_TEXTURE = 9;
		public const int UFBXI_MAT_PBR = 0;
		public const int UFBXI_MAT_METALNESS = 1;
		public const int UFBXI_MAT_DIFFUSE = 2;
		public const int UFBXI_MAT_SPECULAR = 3;
		public const int UFBXI_MAT_EMISSION = 4;
		public const int UFBXI_MAT_COAT = 5;
		public const int UFBXI_MAT_SHEEN = 6;
		public const int UFBXI_MAT_TRANSMISSION = 7;
		public const int UFBXI_MAT_OPACITY = 8;
		public const int UFBXI_MAT_AMBIENT_OCCLUSION = 9;
		public const int UFBXI_MAT_MATTE = 10;
		public const int UFBXI_MAT_UNLIT = 11;
		public const int UFBXI_MAT_IOR = 12;
		public const int UFBXI_MAT_DIFFUSE_ROUGHNESS = 13;
		public const int UFBXI_MAT_TRANSMISSION_ROUGHNESS = 14;
		public const int UFBXI_MAT_THIN_WALLED = 15;
		public const int UFBXI_MAT_CAUSTICS = 16;
		public const int UFBXI_MAT_EXIT_TO_BACKGROUND = 17;
		public const int UFBXI_MAT_INTERNAL_REFLECTIONS = 18;
		public const int UFBXI_MAT_DOUBLE_SIDED = 19;
		public const int UFBXI_MAPPING_FETCH_VALUE = 1;
		public const int UFBXI_MAPPING_FETCH_TEXTURE = 2;
		public const int UFBXI_MAPPING_FETCH_TEXTURE_ENABLED = 4;
		public const int UFBXI_MAPPING_FETCH_FEATURE = 8;
		public const int UFBXI_CONSTRAINT_PROP_NODE = 0;
		public const int UFBXI_CONSTRAINT_PROP_IK_EFFECTOR = 1;
		public const int UFBXI_CONSTRAINT_PROP_IK_END_NODE = 2;
		public const int UFBXI_CONSTRAINT_PROP_AIM_UP = 3;
		public const int UFBXI_CONSTRAINT_PROP_TARGET = 4;
		public const int UFBXI_FILE_TEXTURE_FETCH_INITIAL = 0;
		public const int UFBXI_FILE_TEXTURE_FETCH_STARTED = 1;
		public const int UFBXI_FILE_TEXTURE_FETCH_FINISHED = 2;
		public const int UFBXI_CACHE_XML_TYPE_NONE = 0;
		public const int UFBXI_CACHE_XML_TYPE_FILE_PER_FRAME = 1;
		public const int UFBXI_CACHE_XML_TYPE_SINGLE_FILE = 2;
		public const int UFBXI_CACHE_XML_FORMAT_NONE = 0;
		public const int UFBXI_CACHE_XML_FORMAT_MCC = 1;
		public const int UFBXI_CACHE_XML_FORMAT_MCX = 2;
		public const int UFBXI_EXTERNAL_FILE_GEOMETRY_CACHE = 0;

		public static ufbx_string[] ufbx_empty_string = new ufbx_string[] { ufbxi_empty_char, 0 };
		public static ufbx_blob[] ufbx_empty_blob = new ufbx_blob[] { null, 0 };
		public static ufbx_matrix[] ufbx_identity_matrix = new ufbx_matrix[] { 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 };
		public static ufbx_transform[] ufbx_identity_transform = new ufbx_transform[] { { 0, 0, 0 }, { 0, 0, 0, 1 }, { 1, 1, 1 } };
		public static ufbx_vec2[] ufbx_zero_vec2 = new ufbx_vec2[] { 0, 0 };
		public static ufbx_vec3[] ufbx_zero_vec3 = new ufbx_vec3[] { 0, 0, 0 };
		public static ufbx_vec4[] ufbx_zero_vec4 = new ufbx_vec4[] { 0, 0, 0, 0 };
		public static ufbx_quat[] ufbx_identity_quat = new ufbx_quat[] { 0, 0, 0, 1 };
		public static ufbx_coordinate_axes[] ufbx_axes_right_handed_y_up = new ufbx_coordinate_axes[] { UFBX_COORDINATE_AXIS_POSITIVE_X, UFBX_COORDINATE_AXIS_POSITIVE_Y, UFBX_COORDINATE_AXIS_POSITIVE_Z };
		public static ufbx_coordinate_axes[] ufbx_axes_right_handed_z_up = new ufbx_coordinate_axes[] { UFBX_COORDINATE_AXIS_POSITIVE_X, UFBX_COORDINATE_AXIS_POSITIVE_Z, UFBX_COORDINATE_AXIS_NEGATIVE_Y };
		public static ufbx_coordinate_axes[] ufbx_axes_left_handed_y_up = new ufbx_coordinate_axes[] { UFBX_COORDINATE_AXIS_POSITIVE_X, UFBX_COORDINATE_AXIS_POSITIVE_Y, UFBX_COORDINATE_AXIS_NEGATIVE_Z };
		public static ufbx_coordinate_axes[] ufbx_axes_left_handed_z_up = new ufbx_coordinate_axes[] { UFBX_COORDINATE_AXIS_POSITIVE_X, UFBX_COORDINATE_AXIS_POSITIVE_Z, UFBX_COORDINATE_AXIS_POSITIVE_Y };
		public static ulong[] ufbx_element_type_size = new ulong[] { sizeof(ufbx_unknown), sizeof(ufbx_node), sizeof(ufbx_mesh), sizeof(ufbx_light), sizeof(ufbx_camera), sizeof(ufbx_bone), sizeof(ufbx_empty), sizeof(ufbx_line_curve), sizeof(ufbx_nurbs_curve), sizeof(ufbx_nurbs_surface), sizeof(ufbx_nurbs_trim_surface), sizeof(ufbx_nurbs_trim_boundary), sizeof(ufbx_procedural_geometry), sizeof(ufbx_stereo_camera), sizeof(ufbx_camera_switcher), sizeof(ufbx_marker), sizeof(ufbx_lod_group), sizeof(ufbx_skin_deformer), sizeof(ufbx_skin_cluster), sizeof(ufbx_blend_deformer), sizeof(ufbx_blend_channel), sizeof(ufbx_blend_shape), sizeof(ufbx_cache_deformer), sizeof(ufbx_cache_file), sizeof(ufbx_material), sizeof(ufbx_texture), sizeof(ufbx_video), sizeof(ufbx_shader), sizeof(ufbx_shader_binding), sizeof(ufbx_anim_stack), sizeof(ufbx_anim_layer), sizeof(ufbx_anim_value), sizeof(ufbx_anim_curve), sizeof(ufbx_display_layer), sizeof(ufbx_selection_set), sizeof(ufbx_selection_node), sizeof(ufbx_character), sizeof(ufbx_constraint), sizeof(ufbx_pose), sizeof(ufbx_metadata_object) };
		public static uint ufbx_source_version = ((uint)(0) * 1000000u + (uint)(5) * 1000u + (uint)(0));
		public static ulong[] ufbxi_pow10_tab = new ulong[] { (1UL L ), (10UL L ), (100UL L ), (1000UL L ), (10000UL L ), (100000UL L ), (1000000UL L ), (10000000UL L ), (100000000UL L ), (1000000000UL L ), (10000000000UL L ), (100000000000UL L ), (1000000000000UL L ), (10000000000000UL L ), (100000000000000UL L ), (1000000000000000UL L ), (10000000000000000UL L ), (100000000000000000UL L ), (1000000000000000000UL L )};
		public static uint[] ufbxi_deflate_length_lut = new uint[] { 0x00000020, 0x00030040, 0x00040040, 0x00050040, 0x00060040, 0x00070040, 0x00080040, 0x00090040, 0x000a0040, 0x000b0041, 0x000d0041, 0x000f0041, 0x00110041, 0x00130042, 0x00170042, 0x001b0042, 0x001f0042, 0x00230043, 0x002b0043, 0x00330043, 0x003b0043, 0x00430044, 0x00530044, 0x00630044, 0x00730044, 0x00830045, 0x00a30045, 0x00c30045, 0x00e30045, 0x01020040, 0x00010020, 0x00010020 };
		public static uint[] ufbxi_deflate_dist_lut = new uint[] { 0x00010000, 0x00020000, 0x00030000, 0x00040000, 0x00050001, 0x00070001, 0x00090002, 0x000d0002, 0x00110003, 0x00190003, 0x00210004, 0x00310004, 0x00410005, 0x00610005, 0x00810006, 0x00c10006, 0x01010007, 0x01810007, 0x02010008, 0x03010008, 0x04010009, 0x06010009, 0x0801000a, 0x0c01000a, 0x1001000b, 0x1801000b, 0x2001000c, 0x3001000c, 0x4001000d, 0x6001000d, 0x00010020, 0x00010020 };
		public static byte[] ufbxi_deflate_code_length_permutation = new byte[] { 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 };
		public static sbyte[] ufbxi_empty_char = new sbyte[] { 0 };
		public static sbyte[] ufbxi_zero_size_buffer = new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		public static sbyte[] ufbxi_AllSame = new sbyte[8];
		public static sbyte[] ufbxi_Alphas = new sbyte[7];
		public static sbyte[] ufbxi_AmbientColor = new sbyte[13];
		public static sbyte[] ufbxi_AnimationCurveNode = new sbyte[19];
		public static sbyte[] ufbxi_AnimationCurve = new sbyte[15];
		public static sbyte[] ufbxi_AnimationLayer = new sbyte[15];
		public static sbyte[] ufbxi_AnimationStack = new sbyte[15];
		public static sbyte[] ufbxi_ApertureFormat = new sbyte[15];
		public static sbyte[] ufbxi_ApertureMode = new sbyte[13];
		public static sbyte[] ufbxi_AreaLightShape = new sbyte[15];
		public static sbyte[] ufbxi_AspectH = new sbyte[8];
		public static sbyte[] ufbxi_AspectHeight = new sbyte[13];
		public static sbyte[] ufbxi_AspectRatioMode = new sbyte[16];
		public static sbyte[] ufbxi_AspectW = new sbyte[8];
		public static sbyte[] ufbxi_AspectWidth = new sbyte[12];
		public static sbyte[] ufbxi_BaseLayer = new sbyte[10];
		public static sbyte[] ufbxi_BinaryData = new sbyte[11];
		public static sbyte[] ufbxi_BindPose = new sbyte[9];
		public static sbyte[] ufbxi_BindingTable = new sbyte[13];
		public static sbyte[] ufbxi_Binormals = new sbyte[10];
		public static sbyte[] ufbxi_BinormalsIndex = new sbyte[15];
		public static sbyte[] ufbxi_BinormalsW = new sbyte[11];
		public static sbyte[] ufbxi_BlendMode = new sbyte[10];
		public static sbyte[] ufbxi_BlendModes = new sbyte[11];
		public static sbyte[] ufbxi_BlendShapeChannel = new sbyte[18];
		public static sbyte[] ufbxi_BlendShape = new sbyte[11];
		public static sbyte[] ufbxi_BlendWeights = new sbyte[13];
		public static sbyte[] ufbxi_BoundaryRule = new sbyte[13];
		public static sbyte[] ufbxi_Boundary = new sbyte[9];
		public static sbyte[] ufbxi_ByEdge = new sbyte[7];
		public static sbyte[] ufbxi_ByPolygonVertex = new sbyte[16];
		public static sbyte[] ufbxi_ByPolygon = new sbyte[10];
		public static sbyte[] ufbxi_ByVertex = new sbyte[9];
		public static sbyte[] ufbxi_ByVertice = new sbyte[10];
		public static sbyte[] ufbxi_Cache = new sbyte[6];
		public static sbyte[] ufbxi_CameraProjectionType = new sbyte[21];
		public static sbyte[] ufbxi_CameraStereo = new sbyte[13];
		public static sbyte[] ufbxi_CameraSwitcher = new sbyte[15];
		public static sbyte[] ufbxi_Camera = new sbyte[7];
		public static sbyte[] ufbxi_CastLight = new sbyte[10];
		public static sbyte[] ufbxi_CastShadows = new sbyte[12];
		public static sbyte[] ufbxi_Channel = new sbyte[8];
		public static sbyte[] ufbxi_Character = new sbyte[10];
		public static sbyte[] ufbxi_Children = new sbyte[9];
		public static sbyte[] ufbxi_Cluster = new sbyte[8];
		public static sbyte[] ufbxi_CollectionExclusive = new sbyte[20];
		public static sbyte[] ufbxi_Collection = new sbyte[11];
		public static sbyte[] ufbxi_ColorIndex = new sbyte[11];
		public static sbyte[] ufbxi_Color = new sbyte[6];
		public static sbyte[] ufbxi_Colors = new sbyte[7];
		public static sbyte[] ufbxi_Cone_angle = new sbyte[11];
		public static sbyte[] ufbxi_ConeAngle = new sbyte[10];
		public static sbyte[] ufbxi_Connections = new sbyte[12];
		public static sbyte[] ufbxi_Constraint = new sbyte[11];
		public static sbyte[] ufbxi_Content = new sbyte[8];
		public static sbyte[] ufbxi_CoordAxisSign = new sbyte[14];
		public static sbyte[] ufbxi_CoordAxis = new sbyte[10];
		public static sbyte[] ufbxi_Count = new sbyte[6];
		public static sbyte[] ufbxi_Creator = new sbyte[8];
		public static sbyte[] ufbxi_CurrentTextureBlendMode = new sbyte[24];
		public static sbyte[] ufbxi_CurrentTimeMarker = new sbyte[18];
		public static sbyte[] ufbxi_CustomFrameRate = new sbyte[16];
		public static sbyte[] ufbxi_DecayType = new sbyte[10];
		public static sbyte[] ufbxi_DefaultCamera = new sbyte[14];
		public static sbyte[] ufbxi_Default = new sbyte[8];
		public static sbyte[] ufbxi_Definitions = new sbyte[12];
		public static sbyte[] ufbxi_DeformPercent = new sbyte[14];
		public static sbyte[] ufbxi_Deformer = new sbyte[9];
		public static sbyte[] ufbxi_DiffuseColor = new sbyte[13];
		public static sbyte[] ufbxi_Dimension = new sbyte[10];
		public static sbyte[] ufbxi_Dimensions = new sbyte[11];
		public static sbyte[] ufbxi_DisplayLayer = new sbyte[13];
		public static sbyte[] ufbxi_Document = new sbyte[9];
		public static sbyte[] ufbxi_Documents = new sbyte[10];
		public static sbyte[] ufbxi_EdgeCrease = new sbyte[11];
		public static sbyte[] ufbxi_EdgeIndexArray = new sbyte[15];
		public static sbyte[] ufbxi_Edges = new sbyte[6];
		public static sbyte[] ufbxi_EmissiveColor = new sbyte[14];
		public static sbyte[] ufbxi_Entry = new sbyte[6];
		public static sbyte[] ufbxi_FBXHeaderExtension = new sbyte[19];
		public static sbyte[] ufbxi_FBXVersion = new sbyte[11];
		public static sbyte[] ufbxi_FKEffector = new sbyte[11];
		public static sbyte[] ufbxi_FarPlane = new sbyte[9];
		public static sbyte[] ufbxi_FbxPropertyEntry = new sbyte[17];
		public static sbyte[] ufbxi_FbxSemanticEntry = new sbyte[17];
		public static sbyte[] ufbxi_FieldOfViewX = new sbyte[13];
		public static sbyte[] ufbxi_FieldOfViewY = new sbyte[13];
		public static sbyte[] ufbxi_FieldOfView = new sbyte[12];
		public static sbyte[] ufbxi_FileName = new sbyte[9];
		public static sbyte[] ufbxi_Filename = new sbyte[9];
		public static sbyte[] ufbxi_FilmHeight = new sbyte[11];
		public static sbyte[] ufbxi_FilmSqueezeRatio = new sbyte[17];
		public static sbyte[] ufbxi_FilmWidth = new sbyte[10];
		public static sbyte[] ufbxi_FlipNormals = new sbyte[12];
		public static sbyte[] ufbxi_FocalLength = new sbyte[12];
		public static sbyte[] ufbxi_Form = new sbyte[5];
		public static sbyte[] ufbxi_Freeze = new sbyte[7];
		public static sbyte[] ufbxi_FrontAxisSign = new sbyte[14];
		public static sbyte[] ufbxi_FrontAxis = new sbyte[10];
		public static sbyte[] ufbxi_FullWeights = new sbyte[12];
		public static sbyte[] ufbxi_GateFit = new sbyte[8];
		public static sbyte[] ufbxi_GeometricRotation = new sbyte[18];
		public static sbyte[] ufbxi_GeometricScaling = new sbyte[17];
		public static sbyte[] ufbxi_GeometricTranslation = new sbyte[21];
		public static sbyte[] ufbxi_GeometryUVInfo = new sbyte[15];
		public static sbyte[] ufbxi_Geometry = new sbyte[9];
		public static sbyte[] ufbxi_GlobalSettings = new sbyte[15];
		public static sbyte[] ufbxi_Hole = new sbyte[5];
		public static sbyte[] ufbxi_HotSpot = new sbyte[8];
		public static sbyte[] ufbxi_IKEffector = new sbyte[11];
		public static sbyte[] ufbxi_Implementation = new sbyte[15];
		public static sbyte[] ufbxi_Indexes = new sbyte[8];
		public static sbyte[] ufbxi_InheritType = new sbyte[12];
		public static sbyte[] ufbxi_InnerAngle = new sbyte[11];
		public static sbyte[] ufbxi_Intensity = new sbyte[10];
		public static sbyte[] ufbxi_IsTheNodeInSet = new sbyte[15];
		public static sbyte[] ufbxi_KeyAttrDataFloat = new sbyte[17];
		public static sbyte[] ufbxi_KeyAttrFlags = new sbyte[13];
		public static sbyte[] ufbxi_KeyAttrRefCount = new sbyte[16];
		public static sbyte[] ufbxi_KeyCount = new sbyte[9];
		public static sbyte[] ufbxi_KeyTime = new sbyte[8];
		public static sbyte[] ufbxi_KeyValueFloat = new sbyte[14];
		public static sbyte[] ufbxi_Key = new sbyte[4];
		public static sbyte[] ufbxi_KnotVectorU = new sbyte[12];
		public static sbyte[] ufbxi_KnotVectorV = new sbyte[12];
		public static sbyte[] ufbxi_KnotVector = new sbyte[11];
		public static sbyte[] ufbxi_LayerElementBinormal = new sbyte[21];
		public static sbyte[] ufbxi_LayerElementColor = new sbyte[18];
		public static sbyte[] ufbxi_LayerElementEdgeCrease = new sbyte[23];
		public static sbyte[] ufbxi_LayerElementHole = new sbyte[17];
		public static sbyte[] ufbxi_LayerElementMaterial = new sbyte[21];
		public static sbyte[] ufbxi_LayerElementNormal = new sbyte[19];
		public static sbyte[] ufbxi_LayerElementPolygonGroup = new sbyte[25];
		public static sbyte[] ufbxi_LayerElementSmoothing = new sbyte[22];
		public static sbyte[] ufbxi_LayerElementTangent = new sbyte[20];
		public static sbyte[] ufbxi_LayerElementUV = new sbyte[15];
		public static sbyte[] ufbxi_LayerElementVertexCrease = new sbyte[25];
		public static sbyte[] ufbxi_LayerElementVisibility = new sbyte[23];
		public static sbyte[] ufbxi_LayerElement = new sbyte[13];
		public static sbyte[] ufbxi_Layer = new sbyte[6];
		public static sbyte[] ufbxi_LayeredTexture = new sbyte[15];
		public static sbyte[] ufbxi_Lcl_Rotation = new sbyte[13];
		public static sbyte[] ufbxi_Lcl_Scaling = new sbyte[12];
		public static sbyte[] ufbxi_Lcl_Translation = new sbyte[16];
		public static sbyte[] ufbxi_LeftCamera = new sbyte[11];
		public static sbyte[] ufbxi_LightType = new sbyte[10];
		public static sbyte[] ufbxi_Light = new sbyte[6];
		public static sbyte[] ufbxi_LimbLength = new sbyte[11];
		public static sbyte[] ufbxi_LimbNode = new sbyte[9];
		public static sbyte[] ufbxi_Limb = new sbyte[5];
		public static sbyte[] ufbxi_Line = new sbyte[5];
		public static sbyte[] ufbxi_Link = new sbyte[5];
		public static sbyte[] ufbxi_LocalStart = new sbyte[11];
		public static sbyte[] ufbxi_LocalStop = new sbyte[10];
		public static sbyte[] ufbxi_LocalTime = new sbyte[10];
		public static sbyte[] ufbxi_LodGroup = new sbyte[9];
		public static sbyte[] ufbxi_MappingInformationType = new sbyte[23];
		public static sbyte[] ufbxi_Marker = new sbyte[7];
		public static sbyte[] ufbxi_MaterialAssignation = new sbyte[20];
		public static sbyte[] ufbxi_Material = new sbyte[9];
		public static sbyte[] ufbxi_Materials = new sbyte[10];
		public static sbyte[] ufbxi_Matrix = new sbyte[7];
		public static sbyte[] ufbxi_Mesh = new sbyte[5];
		public static sbyte[] ufbxi_Model = new sbyte[6];
		public static sbyte[] ufbxi_Name = new sbyte[5];
		public static sbyte[] ufbxi_NearPlane = new sbyte[10];
		public static sbyte[] ufbxi_NodeAttributeName = new sbyte[18];
		public static sbyte[] ufbxi_NodeAttribute = new sbyte[14];
		public static sbyte[] ufbxi_Node = new sbyte[5];
		public static sbyte[] ufbxi_Normals = new sbyte[8];
		public static sbyte[] ufbxi_NormalsIndex = new sbyte[13];
		public static sbyte[] ufbxi_NormalsW = new sbyte[9];
		public static sbyte[] ufbxi_Null = new sbyte[5];
		public static sbyte[] ufbxi_NurbsCurve = new sbyte[11];
		public static sbyte[] ufbxi_NurbsSurfaceOrder = new sbyte[18];
		public static sbyte[] ufbxi_NurbsSurface = new sbyte[13];
		public static sbyte[] ufbxi_Nurbs = new sbyte[6];
		public static sbyte[] ufbxi_OO = new sbyte[4];
		public static sbyte[] ufbxi_OP = new sbyte[4];
		public static sbyte[] ufbxi_ObjectMetaData = new sbyte[15];
		public static sbyte[] ufbxi_ObjectType = new sbyte[11];
		public static sbyte[] ufbxi_Objects = new sbyte[8];
		public static sbyte[] ufbxi_Order = new sbyte[6];
		public static sbyte[] ufbxi_OriginalUnitScaleFactor = new sbyte[24];
		public static sbyte[] ufbxi_OriginalUpAxis = new sbyte[15];
		public static sbyte[] ufbxi_OriginalUpAxisSign = new sbyte[19];
		public static sbyte[] ufbxi_OrthoZoom = new sbyte[10];
		public static sbyte[] ufbxi_OuterAngle = new sbyte[11];
		public static sbyte[] ufbxi_PO = new sbyte[4];
		public static sbyte[] ufbxi_PP = new sbyte[4];
		public static sbyte[] ufbxi_PointsIndex = new sbyte[12];
		public static sbyte[] ufbxi_Points = new sbyte[7];
		public static sbyte[] ufbxi_PolygonGroup = new sbyte[13];
		public static sbyte[] ufbxi_PolygonIndexArray = new sbyte[18];
		public static sbyte[] ufbxi_PolygonVertexIndex = new sbyte[19];
		public static sbyte[] ufbxi_PoseNode = new sbyte[9];
		public static sbyte[] ufbxi_Pose = new sbyte[5];
		public static sbyte[] ufbxi_PostRotation = new sbyte[13];
		public static sbyte[] ufbxi_PreRotation = new sbyte[12];
		public static sbyte[] ufbxi_PreviewDivisionLevels = new sbyte[22];
		public static sbyte[] ufbxi_Properties60 = new sbyte[13];
		public static sbyte[] ufbxi_Properties70 = new sbyte[13];
		public static sbyte[] ufbxi_PropertyTemplate = new sbyte[17];
		public static sbyte[] ufbxi_R = new sbyte[4];
		public static sbyte[] ufbxi_ReferenceStart = new sbyte[15];
		public static sbyte[] ufbxi_ReferenceStop = new sbyte[14];
		public static sbyte[] ufbxi_ReferenceTime = new sbyte[14];
		public static sbyte[] ufbxi_RelativeFileName = new sbyte[17];
		public static sbyte[] ufbxi_RelativeFilename = new sbyte[17];
		public static sbyte[] ufbxi_RenderDivisionLevels = new sbyte[21];
		public static sbyte[] ufbxi_RightCamera = new sbyte[12];
		public static sbyte[] ufbxi_RootNode = new sbyte[9];
		public static sbyte[] ufbxi_Root = new sbyte[5];
		public static sbyte[] ufbxi_RotationAccumulationMode = new sbyte[25];
		public static sbyte[] ufbxi_RotationOffset = new sbyte[15];
		public static sbyte[] ufbxi_RotationOrder = new sbyte[14];
		public static sbyte[] ufbxi_RotationPivot = new sbyte[14];
		public static sbyte[] ufbxi_Rotation = new sbyte[9];
		public static sbyte[] ufbxi_S = new sbyte[4];
		public static sbyte[] ufbxi_ScaleAccumulationMode = new sbyte[22];
		public static sbyte[] ufbxi_ScalingOffset = new sbyte[14];
		public static sbyte[] ufbxi_ScalingPivot = new sbyte[13];
		public static sbyte[] ufbxi_Scaling = new sbyte[8];
		public static sbyte[] ufbxi_SceneInfo = new sbyte[10];
		public static sbyte[] ufbxi_SelectionNode = new sbyte[14];
		public static sbyte[] ufbxi_SelectionSet = new sbyte[13];
		public static sbyte[] ufbxi_ShadingModel = new sbyte[13];
		public static sbyte[] ufbxi_Shape = new sbyte[6];
		public static sbyte[] ufbxi_Shininess = new sbyte[10];
		public static sbyte[] ufbxi_Show = new sbyte[5];
		public static sbyte[] ufbxi_Size = new sbyte[5];
		public static sbyte[] ufbxi_Skin = new sbyte[5];
		public static sbyte[] ufbxi_SkinningType = new sbyte[13];
		public static sbyte[] ufbxi_Smoothing = new sbyte[10];
		public static sbyte[] ufbxi_Smoothness = new sbyte[11];
		public static sbyte[] ufbxi_SnapOnFrameMode = new sbyte[16];
		public static sbyte[] ufbxi_SpecularColor = new sbyte[14];
		public static sbyte[] ufbxi_Step = new sbyte[5];
		public static sbyte[] ufbxi_SubDeformer = new sbyte[12];
		public static sbyte[] ufbxi_T = new sbyte[4];
		public static sbyte[] ufbxi_Take = new sbyte[5];
		public static sbyte[] ufbxi_Takes = new sbyte[6];
		public static sbyte[] ufbxi_Tangents = new sbyte[9];
		public static sbyte[] ufbxi_TangentsIndex = new sbyte[14];
		public static sbyte[] ufbxi_TangentsW = new sbyte[10];
		public static sbyte[] ufbxi_Texture = new sbyte[8];
		public static sbyte[] ufbxi_Texture_alpha = new sbyte[14];
		public static sbyte[] ufbxi_TextureId = new sbyte[10];
		public static sbyte[] ufbxi_TextureRotationPivot = new sbyte[21];
		public static sbyte[] ufbxi_TextureScalingPivot = new sbyte[20];
		public static sbyte[] ufbxi_TextureUV = new sbyte[10];
		public static sbyte[] ufbxi_TextureUVVerticeIndex = new sbyte[22];
		public static sbyte[] ufbxi_TimeMarker = new sbyte[11];
		public static sbyte[] ufbxi_TimeMode = new sbyte[9];
		public static sbyte[] ufbxi_TimeProtocol = new sbyte[13];
		public static sbyte[] ufbxi_TimeSpanStart = new sbyte[14];
		public static sbyte[] ufbxi_TimeSpanStop = new sbyte[13];
		public static sbyte[] ufbxi_TransformLink = new sbyte[14];
		public static sbyte[] ufbxi_Transform = new sbyte[10];
		public static sbyte[] ufbxi_Translation = new sbyte[12];
		public static sbyte[] ufbxi_TrimNurbsSurface = new sbyte[17];
		public static sbyte[] ufbxi_Type = new sbyte[5];
		public static sbyte[] ufbxi_TypedIndex = new sbyte[11];
		public static sbyte[] ufbxi_UVIndex = new sbyte[8];
		public static sbyte[] ufbxi_UVSet = new sbyte[6];
		public static sbyte[] ufbxi_UVSwap = new sbyte[7];
		public static sbyte[] ufbxi_UV = new sbyte[4];
		public static sbyte[] ufbxi_UnitScaleFactor = new sbyte[16];
		public static sbyte[] ufbxi_UpAxisSign = new sbyte[11];
		public static sbyte[] ufbxi_UpAxis = new sbyte[7];
		public static sbyte[] ufbxi_VertexCacheDeformer = new sbyte[20];
		public static sbyte[] ufbxi_VertexCrease = new sbyte[13];
		public static sbyte[] ufbxi_VertexCreaseIndex = new sbyte[18];
		public static sbyte[] ufbxi_VertexIndexArray = new sbyte[17];
		public static sbyte[] ufbxi_Vertices = new sbyte[9];
		public static sbyte[] ufbxi_Video = new sbyte[6];
		public static sbyte[] ufbxi_Visibility = new sbyte[11];
		public static sbyte[] ufbxi_Weight = new sbyte[7];
		public static sbyte[] ufbxi_Weights = new sbyte[8];
		public static sbyte[] ufbxi_WrapModeU = new sbyte[10];
		public static sbyte[] ufbxi_WrapModeV = new sbyte[10];
		public static sbyte[] ufbxi_X = new sbyte[4];
		public static sbyte[] ufbxi_Y = new sbyte[4];
		public static sbyte[] ufbxi_Z = new sbyte[4];
		public static sbyte[] ufbxi_d_X = new sbyte[4];
		public static sbyte[] ufbxi_d_Y = new sbyte[4];
		public static sbyte[] ufbxi_d_Z = new sbyte[4];
		public static ufbx_string[] ufbxi_strings = new ufbx_string[] { { ufbxi_AllSame, 7 }, { ufbxi_Alphas, 6 }, { ufbxi_AmbientColor, 12 }, { ufbxi_AnimationCurve, 14 }, { ufbxi_AnimationCurveNode, 18 }, { ufbxi_AnimationLayer, 14 }, { ufbxi_AnimationStack, 14 }, { ufbxi_ApertureFormat, 14 }, { ufbxi_ApertureMode, 12 }, { ufbxi_AreaLightShape, 14 }, { ufbxi_AspectH, 7 }, { ufbxi_AspectHeight, 12 }, { ufbxi_AspectRatioMode, 15 }, { ufbxi_AspectW, 7 }, { ufbxi_AspectWidth, 11 }, { ufbxi_BaseLayer, 9 }, { ufbxi_BinaryData, 10 }, { ufbxi_BindPose, 8 }, { ufbxi_BindingTable, 12 }, { ufbxi_Binormals, 9 }, { ufbxi_BinormalsIndex, 14 }, { ufbxi_BinormalsW, 10 }, { ufbxi_BlendMode, 9 }, { ufbxi_BlendModes, 10 }, { ufbxi_BlendShape, 10 }, { ufbxi_BlendShapeChannel, 17 }, { ufbxi_BlendWeights, 12 }, { ufbxi_Boundary, 8 }, { ufbxi_BoundaryRule, 12 }, { ufbxi_ByEdge, 6 }, { ufbxi_ByPolygon, 9 }, { ufbxi_ByPolygonVertex, 15 }, { ufbxi_ByVertex, 8 }, { ufbxi_ByVertice, 9 }, { ufbxi_Cache, 5 }, { ufbxi_Camera, 6 }, { ufbxi_CameraProjectionType, 20 }, { ufbxi_CameraStereo, 12 }, { ufbxi_CameraSwitcher, 14 }, { ufbxi_CastLight, 9 }, { ufbxi_CastShadows, 11 }, { ufbxi_Channel, 7 }, { ufbxi_Character, 10 * sizeof(sbyte) - 1 }, { ufbxi_Children, 8 }, { ufbxi_Cluster, 7 }, { ufbxi_Collection, 10 }, { ufbxi_CollectionExclusive, 19 }, { ufbxi_Color, 5 }, { ufbxi_ColorIndex, 10 }, { ufbxi_Colors, 6 }, { ufbxi_Cone_angle, 10 }, { ufbxi_ConeAngle, 9 }, { ufbxi_Connections, 11 }, { ufbxi_Constraint, 11 * sizeof(sbyte) - 1 }, { ufbxi_Content, 7 }, { ufbxi_CoordAxis, 9 }, { ufbxi_CoordAxisSign, 13 }, { ufbxi_Count, 5 }, { ufbxi_Creator, 7 }, { ufbxi_CurrentTextureBlendMode, 23 }, { ufbxi_CurrentTimeMarker, 17 }, { ufbxi_CustomFrameRate, 15 }, { ufbxi_DecayType, 9 }, { ufbxi_Default, 7 }, { ufbxi_DefaultCamera, 13 }, { ufbxi_Definitions, 11 }, { ufbxi_DeformPercent, 13 }, { ufbxi_Deformer, 8 }, { ufbxi_DiffuseColor, 12 }, { ufbxi_Dimension, 9 }, { ufbxi_Dimensions, 10 }, { ufbxi_DisplayLayer, 12 }, { ufbxi_Document, 8 }, { ufbxi_Documents, 9 }, { ufbxi_EdgeCrease, 10 }, { ufbxi_EdgeIndexArray, 14 }, { ufbxi_Edges, 5 }, { ufbxi_EmissiveColor, 13 }, { ufbxi_Entry, 5 }, { ufbxi_FBXHeaderExtension, 18 }, { ufbxi_FBXVersion, 10 }, { ufbxi_FKEffector, 10 }, { ufbxi_FarPlane, 8 }, { ufbxi_FbxPropertyEntry, 16 }, { ufbxi_FbxSemanticEntry, 16 }, { ufbxi_FieldOfView, 11 }, { ufbxi_FieldOfViewX, 12 }, { ufbxi_FieldOfViewY, 12 }, { ufbxi_FileName, 8 }, { ufbxi_Filename, 8 }, { ufbxi_FilmHeight, 10 }, { ufbxi_FilmSqueezeRatio, 16 }, { ufbxi_FilmWidth, 9 }, { ufbxi_FlipNormals, 11 }, { ufbxi_FocalLength, 11 }, { ufbxi_Form, 4 }, { ufbxi_Freeze, 6 }, { ufbxi_FrontAxis, 9 }, { ufbxi_FrontAxisSign, 13 }, { ufbxi_FullWeights, 11 }, { ufbxi_GateFit, 7 }, { ufbxi_GeometricRotation, 17 }, { ufbxi_GeometricScaling, 16 }, { ufbxi_GeometricTranslation, 20 }, { ufbxi_Geometry, 8 }, { ufbxi_GeometryUVInfo, 14 }, { ufbxi_GlobalSettings, 14 }, { ufbxi_Hole, 4 }, { ufbxi_HotSpot, 7 }, { ufbxi_IKEffector, 10 }, { ufbxi_Implementation, 14 }, { ufbxi_Indexes, 7 }, { ufbxi_InheritType, 11 }, { ufbxi_InnerAngle, 10 }, { ufbxi_Intensity, 9 }, { ufbxi_IsTheNodeInSet, 14 }, { ufbxi_Key, 3 }, { ufbxi_KeyAttrDataFloat, 16 }, { ufbxi_KeyAttrFlags, 12 }, { ufbxi_KeyAttrRefCount, 15 }, { ufbxi_KeyCount, 8 }, { ufbxi_KeyTime, 7 }, { ufbxi_KeyValueFloat, 13 }, { ufbxi_KnotVector, 10 }, { ufbxi_KnotVectorU, 11 }, { ufbxi_KnotVectorV, 11 }, { ufbxi_Layer, 5 }, { ufbxi_LayerElement, 12 }, { ufbxi_LayerElementBinormal, 20 }, { ufbxi_LayerElementColor, 17 }, { ufbxi_LayerElementEdgeCrease, 22 }, { ufbxi_LayerElementHole, 16 }, { ufbxi_LayerElementMaterial, 20 }, { ufbxi_LayerElementNormal, 18 }, { ufbxi_LayerElementPolygonGroup, 24 }, { ufbxi_LayerElementSmoothing, 21 }, { ufbxi_LayerElementTangent, 19 }, { ufbxi_LayerElementUV, 14 }, { ufbxi_LayerElementVertexCrease, 24 }, { ufbxi_LayerElementVisibility, 22 }, { ufbxi_LayeredTexture, 14 }, { ufbxi_Lcl_Rotation, 12 }, { ufbxi_Lcl_Scaling, 11 }, { ufbxi_Lcl_Translation, 15 }, { ufbxi_LeftCamera, 10 }, { ufbxi_Light, 5 }, { ufbxi_LightType, 9 }, { ufbxi_Limb, 4 }, { ufbxi_LimbLength, 10 }, { ufbxi_LimbNode, 8 }, { ufbxi_Line, 4 }, { ufbxi_Link, 4 }, { ufbxi_LocalStart, 10 }, { ufbxi_LocalStop, 9 }, { ufbxi_LocalTime, 9 }, { ufbxi_LodGroup, 8 }, { ufbxi_MappingInformationType, 22 }, { ufbxi_Marker, 6 }, { ufbxi_Material, 8 }, { ufbxi_MaterialAssignation, 19 }, { ufbxi_Materials, 9 }, { ufbxi_Matrix, 6 }, { ufbxi_Mesh, 4 }, { ufbxi_Model, 5 }, { ufbxi_Name, 4 }, { ufbxi_NearPlane, 9 }, { ufbxi_Node, 4 }, { ufbxi_NodeAttribute, 13 }, { ufbxi_NodeAttributeName, 17 }, { ufbxi_Normals, 7 }, { ufbxi_NormalsIndex, 12 }, { ufbxi_NormalsW, 8 }, { ufbxi_Null, 4 }, { ufbxi_Nurbs, 5 }, { ufbxi_NurbsCurve, 10 }, { ufbxi_NurbsSurface, 12 }, { ufbxi_NurbsSurfaceOrder, 17 }, { ufbxi_OO, 2 }, { ufbxi_OP, 2 }, { ufbxi_ObjectMetaData, 14 }, { ufbxi_ObjectType, 10 }, { ufbxi_Objects, 7 }, { ufbxi_Order, 5 }, { ufbxi_OriginalUnitScaleFactor, 23 }, { ufbxi_OriginalUpAxis, 14 }, { ufbxi_OriginalUpAxisSign, 18 }, { ufbxi_OrthoZoom, 9 }, { ufbxi_OuterAngle, 10 }, { ufbxi_PO, 2 }, { ufbxi_PP, 2 }, { ufbxi_Points, 6 }, { ufbxi_PointsIndex, 11 }, { ufbxi_PolygonGroup, 12 }, { ufbxi_PolygonIndexArray, 17 }, { ufbxi_PolygonVertexIndex, 18 }, { ufbxi_Pose, 4 }, { ufbxi_PoseNode, 8 }, { ufbxi_PostRotation, 12 }, { ufbxi_PreRotation, 11 }, { ufbxi_PreviewDivisionLevels, 21 }, { ufbxi_Properties60, 12 }, { ufbxi_Properties70, 12 }, { ufbxi_PropertyTemplate, 16 }, { ufbxi_R, 1 }, { ufbxi_ReferenceStart, 14 }, { ufbxi_ReferenceStop, 13 }, { ufbxi_ReferenceTime, 13 }, { ufbxi_RelativeFileName, 16 }, { ufbxi_RelativeFilename, 16 }, { ufbxi_RenderDivisionLevels, 20 }, { ufbxi_RightCamera, 11 }, { ufbxi_Root, 4 }, { ufbxi_RootNode, 8 }, { ufbxi_Rotation, 8 }, { ufbxi_RotationAccumulationMode, 24 }, { ufbxi_RotationOffset, 14 }, { ufbxi_RotationOrder, 13 }, { ufbxi_RotationPivot, 13 }, { ufbxi_S, 1 }, { ufbxi_ScaleAccumulationMode, 21 }, { ufbxi_Scaling, 7 }, { ufbxi_ScalingOffset, 13 }, { ufbxi_ScalingPivot, 12 }, { ufbxi_SceneInfo, 9 }, { ufbxi_SelectionNode, 13 }, { ufbxi_SelectionSet, 12 }, { ufbxi_ShadingModel, 12 }, { ufbxi_Shape, 5 }, { ufbxi_Shininess, 9 }, { ufbxi_Show, 4 }, { ufbxi_Size, 4 }, { ufbxi_Skin, 4 }, { ufbxi_SkinningType, 12 }, { ufbxi_Smoothing, 9 }, { ufbxi_Smoothness, 10 }, { ufbxi_SnapOnFrameMode, 15 }, { ufbxi_SpecularColor, 13 }, { ufbxi_Step, 4 }, { ufbxi_SubDeformer, 11 }, { ufbxi_T, 1 }, { ufbxi_Take, 4 }, { ufbxi_Takes, 5 }, { ufbxi_Tangents, 8 }, { ufbxi_TangentsIndex, 13 }, { ufbxi_TangentsW, 9 }, { ufbxi_Texture, 7 }, { ufbxi_Texture_alpha, 13 }, { ufbxi_TextureId, 9 }, { ufbxi_TextureRotationPivot, 20 }, { ufbxi_TextureScalingPivot, 19 }, { ufbxi_TextureUV, 9 }, { ufbxi_TextureUVVerticeIndex, 21 }, { ufbxi_TimeMarker, 10 }, { ufbxi_TimeMode, 8 }, { ufbxi_TimeProtocol, 12 }, { ufbxi_TimeSpanStart, 13 }, { ufbxi_TimeSpanStop, 12 }, { ufbxi_Transform, 9 }, { ufbxi_TransformLink, 13 }, { ufbxi_Translation, 11 }, { ufbxi_TrimNurbsSurface, 16 }, { ufbxi_Type, 4 }, { ufbxi_TypedIndex, 10 }, { ufbxi_UV, 2 }, { ufbxi_UVIndex, 7 }, { ufbxi_UVSet, 5 }, { ufbxi_UVSwap, 6 }, { ufbxi_UnitScaleFactor, 15 }, { ufbxi_UpAxis, 6 }, { ufbxi_UpAxisSign, 10 }, { ufbxi_VertexCacheDeformer, 19 }, { ufbxi_VertexCrease, 12 }, { ufbxi_VertexCreaseIndex, 17 }, { ufbxi_VertexIndexArray, 16 }, { ufbxi_Vertices, 8 }, { ufbxi_Video, 5 }, { ufbxi_Visibility, 10 }, { ufbxi_Weight, 6 }, { ufbxi_Weights, 7 }, { ufbxi_WrapModeU, 9 }, { ufbxi_WrapModeV, 9 }, { ufbxi_X, 1 }, { ufbxi_Y, 1 }, { ufbxi_Z, 1 }, { ufbxi_d_X, 3 }, { ufbxi_d_Y, 3 }, { ufbxi_d_Z, 3 } };
		public static ufbx_vec3[] ufbxi_one_vec3 = new ufbx_vec3[] { 1.0f, 1.0f, 1.0f };
		public static byte[] ufbxi_obj_attrib_stride = new byte[] { 3, 2, 3, 4 };
		public static byte[] ufbxi_xml_ctype = new byte[] { 32, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 12, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 8, 8, 8 };
		public static sbyte[] ufbxi_binary_magic = new sbyte[23];
		public static uint ufbxi_space_mask = (1u << ((uint)(32) - 1)) | (1u << ((uint)(9) - 1)) | (1u << ((uint)(13) - 1)) | (1u << ((uint)(10) - 1));
		public static ufbxi_prop_type_name[] ufbxi_prop_type_names = new ufbxi_prop_type_name[] { { "Boolean", UFBX_PROP_BOOLEAN }, { "bool", UFBX_PROP_BOOLEAN }, { "Bool", UFBX_PROP_BOOLEAN }, { "Integer", UFBX_PROP_INTEGER }, { "int", UFBX_PROP_INTEGER }, { "enum", UFBX_PROP_INTEGER }, { "Visibility", UFBX_PROP_INTEGER }, { "Visibility Inheritance", UFBX_PROP_INTEGER }, { "KTime", UFBX_PROP_INTEGER }, { "Number", UFBX_PROP_NUMBER }, { "double", UFBX_PROP_NUMBER }, { "Real", UFBX_PROP_NUMBER }, { "Float", UFBX_PROP_NUMBER }, { "Intensity", UFBX_PROP_NUMBER }, { "Vector", UFBX_PROP_VECTOR }, { "Vector3D", UFBX_PROP_VECTOR }, { "Color", UFBX_PROP_COLOR }, { "ColorAndAlpha", UFBX_PROP_COLOR_WITH_ALPHA }, { "ColorRGB", UFBX_PROP_COLOR }, { "String", UFBX_PROP_STRING }, { "KString", UFBX_PROP_STRING }, { "object", UFBX_PROP_STRING }, { "DateTime", UFBX_PROP_DATE_TIME }, { "Lcl Translation", UFBX_PROP_TRANSLATION }, { "Lcl Rotation", UFBX_PROP_ROTATION }, { "Lcl Scaling", UFBX_PROP_SCALING }, { "Distance", UFBX_PROP_DISTANCE }, { "Compound", UFBX_PROP_COMPOUND }, { "Blob", UFBX_PROP_BLOB }, { "Reference", UFBX_PROP_REFERENCE } };
		public static sbyte[,] ufbxi_node_prop_names = new sbyte[] { "AxisLen", "DefaultAttributeIndex", "Freeze", "GeometricRotation", "GeometricScaling", "GeometricTranslation", "InheritType", "LODBox", "Lcl Rotation", "Lcl Scaling", "Lcl Translation", "LookAtProperty", "MaxDampRangeX", "MaxDampRangeY", "MaxDampRangeZ", "MaxDampStrengthX", "MaxDampStrengthY", "MaxDampStrengthZ", "MinDampRangeX", "MinDampRangeY", "MinDampRangeZ", "MinDampStrengthX", "MinDampStrengthY", "MinDampStrengthZ", "NegativePercentShapeSupport", "PostRotation", "PreRotation", "PreferedAngleX", "PreferedAngleY", "PreferedAngleZ", "QuaternionInterpolate", "RotationActive", "RotationMax", "RotationMaxX", "RotationMaxY", "RotationMaxZ", "RotationMin", "RotationMinX", "RotationMinY", "RotationMinZ", "RotationOffset", "RotationOrder", "RotationPivot", "RotationSpaceForLimitOnly", "RotationStiffnessX", "RotationStiffnessY", "RotationStiffnessZ", "ScalingActive", "ScalingMax", "ScalingMaxX", "ScalingMaxY", "ScalingMaxZ", "ScalingMin", "ScalingMinX", "ScalingMinY", "ScalingMinZ", "ScalingOffset", "ScalingPivot", "Show", "TranslationActive", "TranslationMax", "TranslationMaxX", "TranslationMaxY", "TranslationMaxZ", "TranslationMin", "TranslationMinX", "TranslationMinY", "TranslationMinZ", "UpVectorProperty", "Visibility Inheritance", "Visibility", "notes" };
		public static float[] ufbxi_zero_element = new float[] { 0, 0, 0, 0, 0, 0, 0, 0 };
		public static uint[] ufbxi_sentinel_index_zero = new uint[] { 100000000 };
		public static uint[] ufbxi_sentinel_index_consecutive = new uint[] { 123456789 };
		public static ufbxi_constraint_type[] ufbxi_constraint_types = new ufbxi_constraint_type[] { { UFBX_CONSTRAINT_AIM, "Aim" }, { UFBX_CONSTRAINT_PARENT, "Parent-Child" }, { UFBX_CONSTRAINT_POSITION, "Position From Positions" }, { UFBX_CONSTRAINT_ROTATION, "Rotation From Rotations" }, { UFBX_CONSTRAINT_SCALE, "Scale From Scales" }, { UFBX_CONSTRAINT_SINGLE_CHAIN_IK, "Single Chain IK" } };
		public static ufbxi_legacy_prop[] ufbxi_legacy_light_props = new ufbxi_legacy_prop[] { { ufbxi_CastLight, UFBX_PROP_BOOLEAN, ufbxi_CastLight, "L" }, { ufbxi_CastShadows, UFBX_PROP_BOOLEAN, ufbxi_CastShadows, "L" }, { ufbxi_Color, UFBX_PROP_COLOR, ufbxi_Color, "RRR" }, { ufbxi_ConeAngle, UFBX_PROP_NUMBER, ufbxi_ConeAngle, "R" }, { ufbxi_HotSpot, UFBX_PROP_NUMBER, ufbxi_HotSpot, "R" }, { ufbxi_Intensity, UFBX_PROP_NUMBER, ufbxi_Intensity, "R" }, { ufbxi_LightType, UFBX_PROP_INTEGER, ufbxi_LightType, "L" } };
		public static ufbxi_legacy_prop[] ufbxi_legacy_camera_props = new ufbxi_legacy_prop[] { { ufbxi_ApertureMode, UFBX_PROP_INTEGER, ufbxi_ApertureMode, "L" }, { ufbxi_AspectH, UFBX_PROP_NUMBER, ufbxi_AspectH, "R" }, { ufbxi_AspectRatioMode, UFBX_PROP_INTEGER, "AspectType", "L" }, { ufbxi_AspectW, UFBX_PROP_NUMBER, ufbxi_AspectW, "R" }, { ufbxi_FieldOfView, UFBX_PROP_NUMBER, "Aperture", "R" }, { ufbxi_FieldOfViewX, UFBX_PROP_NUMBER, "FieldOfViewXProperty", "R" }, { ufbxi_FieldOfViewY, UFBX_PROP_NUMBER, "FieldOfViewYProperty", "R" }, { ufbxi_FilmHeight, UFBX_PROP_NUMBER, "CameraAperture", "_R" }, { ufbxi_FilmSqueezeRatio, UFBX_PROP_NUMBER, "SqueezeRatio", "R" }, { ufbxi_FilmWidth, UFBX_PROP_NUMBER, "CameraAperture", "R_" }, { ufbxi_FocalLength, UFBX_PROP_NUMBER, ufbxi_FocalLength, "R" } };
		public static ufbxi_legacy_prop[] ufbxi_legacy_bone_props = new ufbxi_legacy_prop[] { { ufbxi_Size, UFBX_PROP_NUMBER, ufbxi_Size, "R" } };
		public static ufbxi_legacy_prop[] ufbxi_legacy_material_props = new ufbxi_legacy_prop[] { { ufbxi_AmbientColor, UFBX_PROP_COLOR, "Ambient", "RRR" }, { ufbxi_DiffuseColor, UFBX_PROP_COLOR, "Diffuse", "RRR" }, { ufbxi_EmissiveColor, UFBX_PROP_COLOR, "Emissive", "RRR" }, { ufbxi_ShadingModel, UFBX_PROP_COLOR, ufbxi_ShadingModel, "S" }, { ufbxi_Shininess, UFBX_PROP_NUMBER, "Shininess", "R" }, { ufbxi_SpecularColor, UFBX_PROP_COLOR, "Specular", "RRR" } };
		public static ufbxi_shader_mapping[] ufbxi_base_fbx_mapping = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_FBX_DIFFUSE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 8 * sizeof(sbyte) - 1, "Diffuse" }, { UFBX_MATERIAL_FBX_DIFFUSE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 13 * sizeof(sbyte) - 1, "DiffuseColor" }, { UFBX_MATERIAL_FBX_DIFFUSE_FACTOR, 0, 0, 14 * sizeof(sbyte) - 1, "DiffuseFactor" }, { UFBX_MATERIAL_FBX_SPECULAR_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 9 * sizeof(sbyte) - 1, "Specular" }, { UFBX_MATERIAL_FBX_SPECULAR_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 14 * sizeof(sbyte) - 1, "SpecularColor" }, { UFBX_MATERIAL_FBX_SPECULAR_FACTOR, 0, 0, 15 * sizeof(sbyte) - 1, "SpecularFactor" }, { UFBX_MATERIAL_FBX_SPECULAR_EXPONENT, 0, 0, 10 * sizeof(sbyte) - 1, "Shininess" }, { UFBX_MATERIAL_FBX_SPECULAR_EXPONENT, 0, 0, 18 * sizeof(sbyte) - 1, "ShininessExponent" }, { UFBX_MATERIAL_FBX_REFLECTION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 11 * sizeof(sbyte) - 1, "Reflection" }, { UFBX_MATERIAL_FBX_REFLECTION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 16 * sizeof(sbyte) - 1, "ReflectionColor" }, { UFBX_MATERIAL_FBX_REFLECTION_FACTOR, 0, 0, 17 * sizeof(sbyte) - 1, "ReflectionFactor" }, { UFBX_MATERIAL_FBX_TRANSPARENCY_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 12 * sizeof(sbyte) - 1, "Transparent" }, { UFBX_MATERIAL_FBX_TRANSPARENCY_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 17 * sizeof(sbyte) - 1, "TransparentColor" }, { UFBX_MATERIAL_FBX_TRANSPARENCY_FACTOR, 0, 0, 18 * sizeof(sbyte) - 1, "TransparentFactor" }, { UFBX_MATERIAL_FBX_TRANSPARENCY_FACTOR, 0, 0, 19 * sizeof(sbyte) - 1, "TransparencyFactor" }, { UFBX_MATERIAL_FBX_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 9 * sizeof(sbyte) - 1, "Emissive" }, { UFBX_MATERIAL_FBX_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 14 * sizeof(sbyte) - 1, "EmissiveColor" }, { UFBX_MATERIAL_FBX_EMISSION_FACTOR, 0, 0, 15 * sizeof(sbyte) - 1, "EmissiveFactor" }, { UFBX_MATERIAL_FBX_AMBIENT_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 8 * sizeof(sbyte) - 1, "Ambient" }, { UFBX_MATERIAL_FBX_AMBIENT_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 13 * sizeof(sbyte) - 1, "AmbientColor" }, { UFBX_MATERIAL_FBX_AMBIENT_FACTOR, 0, 0, 14 * sizeof(sbyte) - 1, "AmbientFactor" }, { UFBX_MATERIAL_FBX_NORMAL_MAP, 0, 0, 10 * sizeof(sbyte) - 1, "NormalMap" }, { UFBX_MATERIAL_FBX_BUMP, 0, 0, 5 * sizeof(sbyte) - 1, "Bump" }, { UFBX_MATERIAL_FBX_BUMP_FACTOR, 0, 0, 11 * sizeof(sbyte) - 1, "BumpFactor" }, { UFBX_MATERIAL_FBX_DISPLACEMENT, 0, 0, 13 * sizeof(sbyte) - 1, "Displacement" }, { UFBX_MATERIAL_FBX_DISPLACEMENT_FACTOR, 0, 0, 19 * sizeof(sbyte) - 1, "DisplacementFactor" }, { UFBX_MATERIAL_FBX_VECTOR_DISPLACEMENT, 0, 0, 19 * sizeof(sbyte) - 1, "VectorDisplacement" }, { UFBX_MATERIAL_FBX_VECTOR_DISPLACEMENT_FACTOR, 0, 0, 25 * sizeof(sbyte) - 1, "VectorDisplacementFactor" } };
		public static ufbxi_shader_mapping[] ufbxi_obj_fbx_mapping = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_FBX_AMBIENT_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1 | UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 3 * sizeof(sbyte) - 1, "Ka" }, { UFBX_MATERIAL_FBX_DIFFUSE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1 | UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 3 * sizeof(sbyte) - 1, "Kd" }, { UFBX_MATERIAL_FBX_SPECULAR_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1 | UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 3 * sizeof(sbyte) - 1, "Ks" }, { UFBX_MATERIAL_FBX_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1 | UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 3 * sizeof(sbyte) - 1, "Ke" }, { UFBX_MATERIAL_FBX_SPECULAR_EXPONENT, 0, 0, 3 * sizeof(sbyte) - 1, "Ns" }, { UFBX_MATERIAL_FBX_TRANSPARENCY_FACTOR, 0, UFBXI_MAT_TRANSFORM_INVERT_X, 2 * sizeof(sbyte) - 1, "d" }, { UFBX_MATERIAL_FBX_NORMAL_MAP, 0, 0, 5 * sizeof(sbyte) - 1, "norm" }, { UFBX_MATERIAL_FBX_DISPLACEMENT, 0, 0, 5 * sizeof(sbyte) - 1, "disp" }, { UFBX_MATERIAL_FBX_BUMP, 0, 0, 5 * sizeof(sbyte) - 1, "bump" } };
		public static ufbxi_shader_mapping[] ufbxi_fbx_lambert_shader_pbr_mapping = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 8 * sizeof(sbyte) - 1, "Diffuse" }, { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 13 * sizeof(sbyte) - 1, "DiffuseColor" }, { UFBX_MATERIAL_PBR_BASE_FACTOR, 0, 0, 14 * sizeof(sbyte) - 1, "DiffuseFactor" }, { UFBX_MATERIAL_PBR_TRANSMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 12 * sizeof(sbyte) - 1, "Transparent" }, { UFBX_MATERIAL_PBR_TRANSMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 17 * sizeof(sbyte) - 1, "TransparentColor" }, { UFBX_MATERIAL_PBR_TRANSMISSION_FACTOR, 0, 0, 18 * sizeof(sbyte) - 1, "TransparentFactor" }, { UFBX_MATERIAL_PBR_TRANSMISSION_FACTOR, 0, 0, 19 * sizeof(sbyte) - 1, "TransparencyFactor" }, { UFBX_MATERIAL_PBR_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 9 * sizeof(sbyte) - 1, "Emissive" }, { UFBX_MATERIAL_PBR_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 14 * sizeof(sbyte) - 1, "EmissiveColor" }, { UFBX_MATERIAL_PBR_EMISSION_FACTOR, 0, 0, 15 * sizeof(sbyte) - 1, "EmissiveFactor" }, { UFBX_MATERIAL_PBR_NORMAL_MAP, 0, 0, 10 * sizeof(sbyte) - 1, "NormalMap" } };
		public static ufbxi_shader_mapping[] ufbxi_fbx_phong_shader_pbr_mapping = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 8 * sizeof(sbyte) - 1, "Diffuse" }, { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 13 * sizeof(sbyte) - 1, "DiffuseColor" }, { UFBX_MATERIAL_PBR_BASE_FACTOR, 0, 0, 14 * sizeof(sbyte) - 1, "DiffuseFactor" }, { UFBX_MATERIAL_PBR_SPECULAR_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 9 * sizeof(sbyte) - 1, "Specular" }, { UFBX_MATERIAL_PBR_SPECULAR_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 14 * sizeof(sbyte) - 1, "SpecularColor" }, { UFBX_MATERIAL_PBR_SPECULAR_FACTOR, 0, 0, 15 * sizeof(sbyte) - 1, "SpecularFactor" }, { UFBX_MATERIAL_PBR_ROUGHNESS, 0, UFBXI_MAT_TRANSFORM_UNKNOWN_SHININESS, 10 * sizeof(sbyte) - 1, "Shininess" }, { UFBX_MATERIAL_PBR_ROUGHNESS, 0, UFBXI_MAT_TRANSFORM_UNKNOWN_SHININESS, 18 * sizeof(sbyte) - 1, "ShininessExponent" }, { UFBX_MATERIAL_PBR_TRANSMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 12 * sizeof(sbyte) - 1, "Transparent" }, { UFBX_MATERIAL_PBR_TRANSMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 17 * sizeof(sbyte) - 1, "TransparentColor" }, { UFBX_MATERIAL_PBR_TRANSMISSION_FACTOR, 0, 0, 18 * sizeof(sbyte) - 1, "TransparentFactor" }, { UFBX_MATERIAL_PBR_TRANSMISSION_FACTOR, 0, 0, 19 * sizeof(sbyte) - 1, "TransparencyFactor" }, { UFBX_MATERIAL_PBR_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 9 * sizeof(sbyte) - 1, "Emissive" }, { UFBX_MATERIAL_PBR_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 14 * sizeof(sbyte) - 1, "EmissiveColor" }, { UFBX_MATERIAL_PBR_EMISSION_FACTOR, 0, 0, 15 * sizeof(sbyte) - 1, "EmissiveFactor" }, { UFBX_MATERIAL_PBR_NORMAL_MAP, 0, 0, 10 * sizeof(sbyte) - 1, "NormalMap" } };
		public static ufbxi_shader_mapping[] ufbxi_osl_standard_shader_pbr_mapping = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_PBR_BASE_FACTOR, 0, 0, 5 * sizeof(sbyte) - 1, "base" }, { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 11 * sizeof(sbyte) - 1, "base_color" }, { UFBX_MATERIAL_PBR_ROUGHNESS, 0, 0, 19 * sizeof(sbyte) - 1, "specular_roughness" }, { UFBX_MATERIAL_PBR_DIFFUSE_ROUGHNESS, 0, 0, 18 * sizeof(sbyte) - 1, "diffuse_roughness" }, { UFBX_MATERIAL_PBR_METALNESS, 0, 0, 10 * sizeof(sbyte) - 1, "metalness" }, { UFBX_MATERIAL_PBR_SPECULAR_FACTOR, 0, 0, 9 * sizeof(sbyte) - 1, "specular" }, { UFBX_MATERIAL_PBR_SPECULAR_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 15 * sizeof(sbyte) - 1, "specular_color" }, { UFBX_MATERIAL_PBR_SPECULAR_IOR, 0, 0, 13 * sizeof(sbyte) - 1, "specular_IOR" }, { UFBX_MATERIAL_PBR_SPECULAR_ANISOTROPY, 0, 0, 20 * sizeof(sbyte) - 1, "specular_anisotropy" }, { UFBX_MATERIAL_PBR_SPECULAR_ROTATION, 0, 0, 18 * sizeof(sbyte) - 1, "specular_rotation" }, { UFBX_MATERIAL_PBR_TRANSMISSION_FACTOR, 0, 0, 13 * sizeof(sbyte) - 1, "transmission" }, { UFBX_MATERIAL_PBR_TRANSMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 19 * sizeof(sbyte) - 1, "transmission_color" }, { UFBX_MATERIAL_PBR_TRANSMISSION_DEPTH, 0, 0, 19 * sizeof(sbyte) - 1, "transmission_depth" }, { UFBX_MATERIAL_PBR_TRANSMISSION_SCATTER, UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 21 * sizeof(sbyte) - 1, "transmission_scatter" }, { UFBX_MATERIAL_PBR_TRANSMISSION_SCATTER_ANISOTROPY, 0, 0, 32 * sizeof(sbyte) - 1, "transmission_scatter_anisotropy" }, { UFBX_MATERIAL_PBR_TRANSMISSION_DISPERSION, 0, 0, 24 * sizeof(sbyte) - 1, "transmission_dispersion" }, { UFBX_MATERIAL_PBR_TRANSMISSION_EXTRA_ROUGHNESS, 0, 0, 29 * sizeof(sbyte) - 1, "transmission_extra_roughness" }, { UFBX_MATERIAL_PBR_SUBSURFACE_FACTOR, 0, 0, 11 * sizeof(sbyte) - 1, "subsurface" }, { UFBX_MATERIAL_PBR_SUBSURFACE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 17 * sizeof(sbyte) - 1, "subsurface_color" }, { UFBX_MATERIAL_PBR_SUBSURFACE_RADIUS, UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 18 * sizeof(sbyte) - 1, "subsurface_radius" }, { UFBX_MATERIAL_PBR_SUBSURFACE_SCALE, 0, 0, 17 * sizeof(sbyte) - 1, "subsurface_scale" }, { UFBX_MATERIAL_PBR_SUBSURFACE_ANISOTROPY, 0, 0, 22 * sizeof(sbyte) - 1, "subsurface_anisotropy" }, { UFBX_MATERIAL_PBR_SHEEN_FACTOR, 0, 0, 6 * sizeof(sbyte) - 1, "sheen" }, { UFBX_MATERIAL_PBR_SHEEN_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 12 * sizeof(sbyte) - 1, "sheen_color" }, { UFBX_MATERIAL_PBR_SHEEN_ROUGHNESS, 0, 0, 16 * sizeof(sbyte) - 1, "sheen_roughness" }, { UFBX_MATERIAL_PBR_COAT_FACTOR, 0, 0, 5 * sizeof(sbyte) - 1, "coat" }, { UFBX_MATERIAL_PBR_COAT_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 11 * sizeof(sbyte) - 1, "coat_color" }, { UFBX_MATERIAL_PBR_COAT_ROUGHNESS, 0, 0, 15 * sizeof(sbyte) - 1, "coat_roughness" }, { UFBX_MATERIAL_PBR_COAT_IOR, 0, 0, 9 * sizeof(sbyte) - 1, "coat_IOR" }, { UFBX_MATERIAL_PBR_COAT_ANISOTROPY, 0, 0, 16 * sizeof(sbyte) - 1, "coat_anisotropy" }, { UFBX_MATERIAL_PBR_COAT_ROTATION, 0, 0, 14 * sizeof(sbyte) - 1, "coat_rotation" }, { UFBX_MATERIAL_PBR_COAT_NORMAL, 0, 0, 12 * sizeof(sbyte) - 1, "coat_normal" }, { UFBX_MATERIAL_PBR_COAT_AFFECT_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 18 * sizeof(sbyte) - 1, "coat_affect_color" }, { UFBX_MATERIAL_PBR_COAT_AFFECT_BASE_ROUGHNESS, 0, 0, 22 * sizeof(sbyte) - 1, "coat_affect_roughness" }, { UFBX_MATERIAL_PBR_THIN_FILM_THICKNESS, 0, 0, 20 * sizeof(sbyte) - 1, "thin_film_thickness" }, { UFBX_MATERIAL_PBR_THIN_FILM_IOR, 0, 0, 14 * sizeof(sbyte) - 1, "thin_film_IOR" }, { UFBX_MATERIAL_PBR_EMISSION_FACTOR, 0, 0, 9 * sizeof(sbyte) - 1, "emission" }, { UFBX_MATERIAL_PBR_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 15 * sizeof(sbyte) - 1, "emission_color" }, { UFBX_MATERIAL_PBR_OPACITY, UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 8 * sizeof(sbyte) - 1, "opacity" }, { UFBX_MATERIAL_PBR_NORMAL_MAP, 0, 0, 10 * sizeof(sbyte) - 1, "NormalMap" }, { UFBX_MATERIAL_PBR_NORMAL_MAP, 0, 0, 13 * sizeof(sbyte) - 1, "normalCamera" }, { UFBX_MATERIAL_PBR_TANGENT_MAP, 0, 0, 8 * sizeof(sbyte) - 1, "tangent" } };
		public static ufbxi_shader_mapping[] ufbxi_osl_standard_shader_features = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_FEATURE_THIN_WALLED, 0, 0, 12 * sizeof(sbyte) - 1, "thin_walled" } };
		public static ufbxi_shader_mapping[] ufbxi_arnold_shader_pbr_mapping = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_PBR_BASE_FACTOR, 0, 0, 5 * sizeof(sbyte) - 1, "base" }, { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 10 * sizeof(sbyte) - 1, "baseColor" }, { UFBX_MATERIAL_PBR_ROUGHNESS, 0, 0, 18 * sizeof(sbyte) - 1, "specularRoughness" }, { UFBX_MATERIAL_PBR_DIFFUSE_ROUGHNESS, 0, 0, 17 * sizeof(sbyte) - 1, "diffuseRoughness" }, { UFBX_MATERIAL_PBR_METALNESS, 0, 0, 10 * sizeof(sbyte) - 1, "metalness" }, { UFBX_MATERIAL_PBR_SPECULAR_FACTOR, 0, 0, 9 * sizeof(sbyte) - 1, "specular" }, { UFBX_MATERIAL_PBR_SPECULAR_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 14 * sizeof(sbyte) - 1, "specularColor" }, { UFBX_MATERIAL_PBR_SPECULAR_IOR, 0, 0, 12 * sizeof(sbyte) - 1, "specularIOR" }, { UFBX_MATERIAL_PBR_SPECULAR_ANISOTROPY, 0, 0, 19 * sizeof(sbyte) - 1, "specularAnisotropy" }, { UFBX_MATERIAL_PBR_SPECULAR_ROTATION, 0, 0, 17 * sizeof(sbyte) - 1, "specularRotation" }, { UFBX_MATERIAL_PBR_TRANSMISSION_FACTOR, 0, 0, 13 * sizeof(sbyte) - 1, "transmission" }, { UFBX_MATERIAL_PBR_TRANSMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 18 * sizeof(sbyte) - 1, "transmissionColor" }, { UFBX_MATERIAL_PBR_TRANSMISSION_DEPTH, 0, 0, 18 * sizeof(sbyte) - 1, "transmissionDepth" }, { UFBX_MATERIAL_PBR_TRANSMISSION_SCATTER, UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 20 * sizeof(sbyte) - 1, "transmissionScatter" }, { UFBX_MATERIAL_PBR_TRANSMISSION_SCATTER_ANISOTROPY, 0, 0, 30 * sizeof(sbyte) - 1, "transmissionScatterAnisotropy" }, { UFBX_MATERIAL_PBR_TRANSMISSION_DISPERSION, 0, 0, 23 * sizeof(sbyte) - 1, "transmissionDispersion" }, { UFBX_MATERIAL_PBR_TRANSMISSION_EXTRA_ROUGHNESS, 0, 0, 27 * sizeof(sbyte) - 1, "transmissionExtraRoughness" }, { UFBX_MATERIAL_PBR_SUBSURFACE_FACTOR, 0, 0, 11 * sizeof(sbyte) - 1, "subsurface" }, { UFBX_MATERIAL_PBR_SUBSURFACE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 16 * sizeof(sbyte) - 1, "subsurfaceColor" }, { UFBX_MATERIAL_PBR_SUBSURFACE_RADIUS, UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 17 * sizeof(sbyte) - 1, "subsurfaceRadius" }, { UFBX_MATERIAL_PBR_SUBSURFACE_SCALE, 0, 0, 16 * sizeof(sbyte) - 1, "subsurfaceScale" }, { UFBX_MATERIAL_PBR_SUBSURFACE_ANISOTROPY, 0, 0, 21 * sizeof(sbyte) - 1, "subsurfaceAnisotropy" }, { UFBX_MATERIAL_PBR_SHEEN_FACTOR, 0, 0, 6 * sizeof(sbyte) - 1, "sheen" }, { UFBX_MATERIAL_PBR_SHEEN_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 11 * sizeof(sbyte) - 1, "sheenColor" }, { UFBX_MATERIAL_PBR_SHEEN_ROUGHNESS, 0, 0, 15 * sizeof(sbyte) - 1, "sheenRoughness" }, { UFBX_MATERIAL_PBR_COAT_FACTOR, 0, 0, 5 * sizeof(sbyte) - 1, "coat" }, { UFBX_MATERIAL_PBR_COAT_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 10 * sizeof(sbyte) - 1, "coatColor" }, { UFBX_MATERIAL_PBR_COAT_ROUGHNESS, 0, 0, 14 * sizeof(sbyte) - 1, "coatRoughness" }, { UFBX_MATERIAL_PBR_COAT_IOR, 0, 0, 8 * sizeof(sbyte) - 1, "coatIOR" }, { UFBX_MATERIAL_PBR_COAT_ANISOTROPY, 0, 0, 15 * sizeof(sbyte) - 1, "coatAnisotropy" }, { UFBX_MATERIAL_PBR_COAT_ROTATION, 0, 0, 13 * sizeof(sbyte) - 1, "coatRotation" }, { UFBX_MATERIAL_PBR_COAT_NORMAL, 0, 0, 11 * sizeof(sbyte) - 1, "coatNormal" }, { UFBX_MATERIAL_PBR_THIN_FILM_THICKNESS, 0, 0, 18 * sizeof(sbyte) - 1, "thinFilmThickness" }, { UFBX_MATERIAL_PBR_THIN_FILM_IOR, 0, 0, 12 * sizeof(sbyte) - 1, "thinFilmIOR" }, { UFBX_MATERIAL_PBR_EMISSION_FACTOR, 0, 0, 9 * sizeof(sbyte) - 1, "emission" }, { UFBX_MATERIAL_PBR_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 14 * sizeof(sbyte) - 1, "emissionColor" }, { UFBX_MATERIAL_PBR_OPACITY, UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 8 * sizeof(sbyte) - 1, "opacity" }, { UFBX_MATERIAL_PBR_INDIRECT_DIFFUSE, 0, 0, 16 * sizeof(sbyte) - 1, "indirectDiffuse" }, { UFBX_MATERIAL_PBR_INDIRECT_SPECULAR, 0, 0, 17 * sizeof(sbyte) - 1, "indirectSpecular" }, { UFBX_MATERIAL_PBR_NORMAL_MAP, 0, 0, 10 * sizeof(sbyte) - 1, "NormalMap" }, { UFBX_MATERIAL_PBR_NORMAL_MAP, 0, 0, 13 * sizeof(sbyte) - 1, "normalCamera" }, { UFBX_MATERIAL_PBR_TANGENT_MAP, 0, 0, 8 * sizeof(sbyte) - 1, "tangent" }, { UFBX_MATERIAL_PBR_MATTE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 13 * sizeof(sbyte) - 1, "aiMatteColor" }, { UFBX_MATERIAL_PBR_MATTE_FACTOR, 0, 0, 14 * sizeof(sbyte) - 1, "aiMatteColorA" }, { UFBX_MATERIAL_PBR_SUBSURFACE_TYPE, 0, 0, 15 * sizeof(sbyte) - 1, "subsurfaceType" }, { UFBX_MATERIAL_PBR_TRANSMISSION_PRIORITY, 0, 0, 19 * sizeof(sbyte) - 1, "dielectricPriority" }, { UFBX_MATERIAL_PBR_TRANSMISSION_ENABLE_IN_AOV, 0, 0, 13 * sizeof(sbyte) - 1, "transmitAovs" } };
		public static ufbxi_shader_mapping[] ufbxi_arnold_shader_features = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_FEATURE_MATTE, 0, 0, 14 * sizeof(sbyte) - 1, "aiEnableMatte" }, { UFBX_MATERIAL_FEATURE_THIN_WALLED, 0, 0, 11 * sizeof(sbyte) - 1, "thinWalled" }, { UFBX_MATERIAL_FEATURE_CAUSTICS, 0, 0, 9 * sizeof(sbyte) - 1, "caustics" }, { UFBX_MATERIAL_FEATURE_INTERNAL_REFLECTIONS, 0, 0, 20 * sizeof(sbyte) - 1, "internalReflections" }, { UFBX_MATERIAL_FEATURE_EXIT_TO_BACKGROUND, 0, 0, 17 * sizeof(sbyte) - 1, "exitToBackground" } };
		public static ufbxi_shader_mapping[] ufbxi_3ds_max_physical_material_pbr_mapping = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_PBR_BASE_FACTOR, 0, 0, 12 * sizeof(sbyte) - 1, "base_weight" }, { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 11 * sizeof(sbyte) - 1, "base_color" }, { UFBX_MATERIAL_PBR_ROUGHNESS, 0, 0, 10 * sizeof(sbyte) - 1, "roughness" }, { UFBX_MATERIAL_PBR_DIFFUSE_ROUGHNESS, 0, 0, 11 * sizeof(sbyte) - 1, "diff_rough" }, { UFBX_MATERIAL_PBR_DIFFUSE_ROUGHNESS, 0, 0, 15 * sizeof(sbyte) - 1, "diff_roughness" }, { UFBX_MATERIAL_PBR_METALNESS, 0, 0, 10 * sizeof(sbyte) - 1, "metalness" }, { UFBX_MATERIAL_PBR_SPECULAR_FACTOR, 0, 0, 13 * sizeof(sbyte) - 1, "reflectivity" }, { UFBX_MATERIAL_PBR_SPECULAR_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 11 * sizeof(sbyte) - 1, "refl_color" }, { UFBX_MATERIAL_PBR_SPECULAR_ANISOTROPY, 0, 0, 11 * sizeof(sbyte) - 1, "anisotropy" }, { UFBX_MATERIAL_PBR_SPECULAR_ROTATION, 0, 0, 12 * sizeof(sbyte) - 1, "aniso_angle" }, { UFBX_MATERIAL_PBR_SPECULAR_ROTATION, 0, 0, 11 * sizeof(sbyte) - 1, "anisoangle" }, { UFBX_MATERIAL_PBR_SPECULAR_IOR, 0, 0, 10 * sizeof(sbyte) - 1, "trans_ior" }, { UFBX_MATERIAL_PBR_TRANSMISSION_FACTOR, 0, 0, 13 * sizeof(sbyte) - 1, "transparency" }, { UFBX_MATERIAL_PBR_TRANSMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 12 * sizeof(sbyte) - 1, "trans_color" }, { UFBX_MATERIAL_PBR_TRANSMISSION_DEPTH, 0, 0, 12 * sizeof(sbyte) - 1, "trans_depth" }, { UFBX_MATERIAL_PBR_TRANSMISSION_ROUGHNESS, 0, 0, 12 * sizeof(sbyte) - 1, "trans_rough" }, { UFBX_MATERIAL_PBR_TRANSMISSION_ROUGHNESS, 0, 0, 16 * sizeof(sbyte) - 1, "trans_roughness" }, { UFBX_MATERIAL_PBR_SUBSURFACE_FACTOR, 0, 0, 11 * sizeof(sbyte) - 1, "scattering" }, { UFBX_MATERIAL_PBR_SUBSURFACE_TINT_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 10 * sizeof(sbyte) - 1, "sss_color" }, { UFBX_MATERIAL_PBR_SUBSURFACE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 18 * sizeof(sbyte) - 1, "sss_scatter_color" }, { UFBX_MATERIAL_PBR_SUBSURFACE_RADIUS, UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 10 * sizeof(sbyte) - 1, "sss_depth" }, { UFBX_MATERIAL_PBR_SUBSURFACE_SCALE, 0, 0, 10 * sizeof(sbyte) - 1, "sss_scale" }, { UFBX_MATERIAL_PBR_COAT_FACTOR, 0, 0, 5 * sizeof(sbyte) - 1, "coat" }, { UFBX_MATERIAL_PBR_COAT_FACTOR, 0, 0, 8 * sizeof(sbyte) - 1, "coating" }, { UFBX_MATERIAL_PBR_COAT_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 11 * sizeof(sbyte) - 1, "coat_color" }, { UFBX_MATERIAL_PBR_COAT_ROUGHNESS, 0, 0, 11 * sizeof(sbyte) - 1, "coat_rough" }, { UFBX_MATERIAL_PBR_COAT_ROUGHNESS, 0, 0, 15 * sizeof(sbyte) - 1, "coat_roughness" }, { UFBX_MATERIAL_PBR_COAT_IOR, 0, 0, 9 * sizeof(sbyte) - 1, "coat_ior" }, { UFBX_MATERIAL_PBR_COAT_NORMAL, 0, 0, 10 * sizeof(sbyte) - 1, "coat_bump" }, { UFBX_MATERIAL_PBR_COAT_NORMAL, 0, 0, 23 * sizeof(sbyte) - 1, "clearcoat_bump_map_amt" }, { UFBX_MATERIAL_PBR_COAT_AFFECT_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 18 * sizeof(sbyte) - 1, "coat_affect_color" }, { UFBX_MATERIAL_PBR_COAT_AFFECT_BASE_ROUGHNESS, 0, 0, 22 * sizeof(sbyte) - 1, "coat_affect_roughness" }, { UFBX_MATERIAL_PBR_EMISSION_FACTOR, 0, 0, 9 * sizeof(sbyte) - 1, "emission" }, { UFBX_MATERIAL_PBR_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 11 * sizeof(sbyte) - 1, "emit_color" }, { UFBX_MATERIAL_PBR_OPACITY, UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 7 * sizeof(sbyte) - 1, "cutout" }, { UFBX_MATERIAL_PBR_NORMAL_MAP, 0, 0, 5 * sizeof(sbyte) - 1, "bump" }, { UFBX_MATERIAL_PBR_NORMAL_MAP, 0, 0, 13 * sizeof(sbyte) - 1, "bump_map_amt" }, { UFBX_MATERIAL_PBR_DISPLACEMENT_MAP, 0, 0, 13 * sizeof(sbyte) - 1, "displacement" }, { UFBX_MATERIAL_PBR_DISPLACEMENT_MAP, 0, 0, 21 * sizeof(sbyte) - 1, "displacement_map_amt" }, { UFBX_MATERIAL_PBR_SUBSURFACE_TYPE, 0, 0, 15 * sizeof(sbyte) - 1, "subsurfaceType" } };
		public static ufbxi_shader_mapping[] ufbxi_3ds_max_physical_material_features = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_FEATURE_THIN_WALLED, 0, 0, 12 * sizeof(sbyte) - 1, "thin_walled" }, { UFBX_MATERIAL_FEATURE_SPECULAR, 0, 0, 14 * sizeof(sbyte) - 1, "material_mode" }, { UFBX_MATERIAL_FEATURE_DIFFUSE_ROUGHNESS, 0, 0, 14 * sizeof(sbyte) - 1, "material_mode" }, { UFBX_MATERIAL_FEATURE_TRANSMISSION_ROUGHNESS, UFBXI_SHADER_FEATURE_INVERTED, 0, 21 * sizeof(sbyte) - 1, "trans_roughness_lock" }, { UFBX_MATERIAL_FEATURE_ROUGHNESS_AS_GLOSSINESS, 0, 0, 14 * sizeof(sbyte) - 1, "roughness_inv" }, { UFBX_MATERIAL_FEATURE_TRANSMISSION_ROUGHNESS_AS_GLOSSINESS, 0, 0, 20 * sizeof(sbyte) - 1, "trans_roughness_inv" }, { UFBX_MATERIAL_FEATURE_COAT_ROUGHNESS_AS_GLOSSINESS, 0, 0, 19 * sizeof(sbyte) - 1, "coat_roughness_inv" } };
		public static ufbxi_shader_mapping[] ufbxi_gltf_material_pbr_mapping = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 15 * sizeof(sbyte) - 1, "main|baseColor" }, { UFBX_MATERIAL_PBR_ROUGHNESS, 0, 0, 15 * sizeof(sbyte) - 1, "main|roughness" }, { UFBX_MATERIAL_PBR_METALNESS, 0, 0, 15 * sizeof(sbyte) - 1, "main|metalness" }, { UFBX_MATERIAL_PBR_NORMAL_MAP, 0, 0, 12 * sizeof(sbyte) - 1, "main|normal" }, { UFBX_MATERIAL_PBR_AMBIENT_OCCLUSION, 0, 0, 22 * sizeof(sbyte) - 1, "main|ambientOcclusion" }, { UFBX_MATERIAL_PBR_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 14 * sizeof(sbyte) - 1, "main|emission" }, { UFBX_MATERIAL_PBR_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 19 * sizeof(sbyte) - 1, "main|emissionColor" }, { UFBX_MATERIAL_PBR_OPACITY, UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 11 * sizeof(sbyte) - 1, "main|Alpha" }, { UFBX_MATERIAL_PBR_COAT_FACTOR, 0, 0, 20 * sizeof(sbyte) - 1, "extension|clearcoat" }, { UFBX_MATERIAL_PBR_COAT_ROUGHNESS, 0, 0, 29 * sizeof(sbyte) - 1, "extension|clearcoatRoughness" }, { UFBX_MATERIAL_PBR_COAT_NORMAL, 0, 0, 26 * sizeof(sbyte) - 1, "extension|clearcoatNormal" }, { UFBX_MATERIAL_PBR_SHEEN_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 21 * sizeof(sbyte) - 1, "extension|sheenColor" }, { UFBX_MATERIAL_PBR_SHEEN_ROUGHNESS, 0, 0, 25 * sizeof(sbyte) - 1, "extension|sheenRoughness" }, { UFBX_MATERIAL_PBR_SPECULAR_FACTOR, 0, 0, 19 * sizeof(sbyte) - 1, "extension|specular" }, { UFBX_MATERIAL_PBR_SPECULAR_FACTOR, 0, 0, 19 * sizeof(sbyte) - 1, "extension|Specular" }, { UFBX_MATERIAL_PBR_SPECULAR_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 24 * sizeof(sbyte) - 1, "extension|specularcolor" }, { UFBX_MATERIAL_PBR_SPECULAR_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 24 * sizeof(sbyte) - 1, "extension|specularColor" }, { UFBX_MATERIAL_PBR_TRANSMISSION_FACTOR, 0, 0, 23 * sizeof(sbyte) - 1, "extension|transmission" }, { UFBX_MATERIAL_PBR_SPECULAR_IOR, 0, 0, 28 * sizeof(sbyte) - 1, "extension|indexOfRefraction" } };
		public static ufbxi_shader_mapping[] ufbxi_3ds_max_pbr_metal_rough_pbr_mapping = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 11 * sizeof(sbyte) - 1, "base_color" }, { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 10 * sizeof(sbyte) - 1, "baseColor" }, { UFBX_MATERIAL_PBR_ROUGHNESS, 0, 0, 10 * sizeof(sbyte) - 1, "roughness" }, { UFBX_MATERIAL_PBR_ROUGHNESS, 0, 0, 14 * sizeof(sbyte) - 1, "Roughness_Map" }, { UFBX_MATERIAL_PBR_METALNESS, 0, 0, 10 * sizeof(sbyte) - 1, "metalness" }, { UFBX_MATERIAL_PBR_AMBIENT_OCCLUSION, 0, 0, 3 * sizeof(sbyte) - 1, "ao" }, { UFBX_MATERIAL_PBR_NORMAL_MAP, 0, 0, 5 * sizeof(sbyte) - 1, "norm" }, { UFBX_MATERIAL_PBR_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 11 * sizeof(sbyte) - 1, "emit_color" }, { UFBX_MATERIAL_PBR_DISPLACEMENT_MAP, 0, 0, 13 * sizeof(sbyte) - 1, "displacement" }, { UFBX_MATERIAL_PBR_DISPLACEMENT_MAP, 0, 0, 17 * sizeof(sbyte) - 1, "displacement_amt" }, { UFBX_MATERIAL_PBR_OPACITY, UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 8 * sizeof(sbyte) - 1, "opacity" } };
		public static ufbxi_shader_mapping[] ufbxi_3ds_max_pbr_spec_gloss_pbr_mapping = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 11 * sizeof(sbyte) - 1, "base_color" }, { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 10 * sizeof(sbyte) - 1, "baseColor" }, { UFBX_MATERIAL_PBR_SPECULAR_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 9 * sizeof(sbyte) - 1, "Specular" }, { UFBX_MATERIAL_PBR_SPECULAR_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 9 * sizeof(sbyte) - 1, "specular" }, { UFBX_MATERIAL_PBR_ROUGHNESS, 0, 0, 11 * sizeof(sbyte) - 1, "glossiness" }, { UFBX_MATERIAL_PBR_AMBIENT_OCCLUSION, 0, 0, 3 * sizeof(sbyte) - 1, "ao" }, { UFBX_MATERIAL_PBR_NORMAL_MAP, 0, 0, 5 * sizeof(sbyte) - 1, "norm" }, { UFBX_MATERIAL_PBR_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 11 * sizeof(sbyte) - 1, "emit_color" }, { UFBX_MATERIAL_PBR_DISPLACEMENT_MAP, 0, 0, 13 * sizeof(sbyte) - 1, "displacement" }, { UFBX_MATERIAL_PBR_DISPLACEMENT_MAP, 0, 0, 17 * sizeof(sbyte) - 1, "displacement_amt" }, { UFBX_MATERIAL_PBR_OPACITY, UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 8 * sizeof(sbyte) - 1, "opacity" } };
		public static ufbxi_shader_mapping[] ufbxi_3ds_max_pbr_features = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_FEATURE_ROUGHNESS_AS_GLOSSINESS, UFBXI_SHADER_FEATURE_IF_AROUND_1, 0, 14 * sizeof(sbyte) - 1, "useGlossiness" } };
		public static ufbxi_shader_mapping[] ufbxi_gltf_material_features = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_FEATURE_DOUBLE_SIDED, 0, 0, 17 * sizeof(sbyte) - 1, "main|DoubleSided" }, { UFBX_MATERIAL_FEATURE_SHEEN, 0, 0, 22 * sizeof(sbyte) - 1, "extension|enableSheen" }, { UFBX_MATERIAL_FEATURE_COAT, 0, 0, 26 * sizeof(sbyte) - 1, "extension|enableClearCoat" }, { UFBX_MATERIAL_FEATURE_TRANSMISSION, 0, 0, 29 * sizeof(sbyte) - 1, "extension|enableTransmission" }, { UFBX_MATERIAL_FEATURE_IOR, 0, 0, 34 * sizeof(sbyte) - 1, "extension|enableIndexOfRefraction" }, { UFBX_MATERIAL_FEATURE_SPECULAR, 0, 0, 25 * sizeof(sbyte) - 1, "extension|enableSpecular" }, { UFBX_MATERIAL_FEATURE_UNLIT, 0, 0, 16 * sizeof(sbyte) - 1, "extension|unlit" } };
		public static ufbxi_shader_mapping[] ufbxi_shaderfx_graph_pbr_mapping = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 6 * sizeof(sbyte) - 1, "color" }, { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 11 * sizeof(sbyte) - 1, "base_color" }, { UFBX_MATERIAL_PBR_ROUGHNESS, 0, 0, 10 * sizeof(sbyte) - 1, "roughness" }, { UFBX_MATERIAL_PBR_METALNESS, 0, 0, 9 * sizeof(sbyte) - 1, "metallic" }, { UFBX_MATERIAL_PBR_NORMAL_MAP, 0, 0, 7 * sizeof(sbyte) - 1, "normal" }, { UFBX_MATERIAL_PBR_EMISSION_FACTOR, 0, 0, 19 * sizeof(sbyte) - 1, "emissive_intensity" }, { UFBX_MATERIAL_PBR_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 9 * sizeof(sbyte) - 1, "emissive" }, { UFBX_MATERIAL_PBR_AMBIENT_OCCLUSION, 0, 0, 3 * sizeof(sbyte) - 1, "ao" } };
		public static ufbxi_shader_mapping[] ufbxi_blender_phong_shader_pbr_mapping = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 13 * sizeof(sbyte) - 1, "DiffuseColor" }, { UFBX_MATERIAL_PBR_OPACITY, UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, UFBXI_MAT_TRANSFORM_BLENDER_OPACITY, 19 * sizeof(sbyte) - 1, "TransparencyFactor" }, { UFBX_MATERIAL_PBR_EMISSION_FACTOR, 0, 0, 15 * sizeof(sbyte) - 1, "EmissiveFactor" }, { UFBX_MATERIAL_PBR_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1, 0, 14 * sizeof(sbyte) - 1, "EmissiveColor" }, { UFBX_MATERIAL_PBR_ROUGHNESS, 0, UFBXI_MAT_TRANSFORM_BLENDER_SHININESS, 10 * sizeof(sbyte) - 1, "Shininess" }, { UFBX_MATERIAL_PBR_ROUGHNESS, 0, UFBXI_MAT_TRANSFORM_BLENDER_SHININESS, 18 * sizeof(sbyte) - 1, "ShininessExponent" }, { UFBX_MATERIAL_PBR_METALNESS, 0, 0, 17 * sizeof(sbyte) - 1, "ReflectionFactor" }, { UFBX_MATERIAL_PBR_NORMAL_MAP, 0, 0, 10 * sizeof(sbyte) - 1, "NormalMap" } };
		public static ufbxi_shader_mapping[] ufbxi_obj_pbr_mapping = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_PBR_BASE_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1 | UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 3 * sizeof(sbyte) - 1, "Kd" }, { UFBX_MATERIAL_PBR_SPECULAR_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1 | UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 3 * sizeof(sbyte) - 1, "Ks" }, { UFBX_MATERIAL_PBR_EMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1 | UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 3 * sizeof(sbyte) - 1, "Ke" }, { UFBX_MATERIAL_PBR_ROUGHNESS, 0, UFBXI_MAT_TRANSFORM_UNKNOWN_SHININESS, 3 * sizeof(sbyte) - 1, "Ns" }, { UFBX_MATERIAL_PBR_ROUGHNESS, 0, 0, 3 * sizeof(sbyte) - 1, "Pr" }, { UFBX_MATERIAL_PBR_SPECULAR_IOR, 0, 0, 3 * sizeof(sbyte) - 1, "Ni" }, { UFBX_MATERIAL_PBR_METALNESS, 0, 0, 3 * sizeof(sbyte) - 1, "Pm" }, { UFBX_MATERIAL_PBR_OPACITY, UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 2 * sizeof(sbyte) - 1, "d" }, { UFBX_MATERIAL_PBR_TRANSMISSION_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1 | UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 3 * sizeof(sbyte) - 1, "Tf" }, { UFBX_MATERIAL_PBR_DISPLACEMENT_MAP, 0, 0, 5 * sizeof(sbyte) - 1, "disp" }, { UFBX_MATERIAL_PBR_NORMAL_MAP, 0, 0, 5 * sizeof(sbyte) - 1, "bump" }, { UFBX_MATERIAL_PBR_NORMAL_MAP, 0, 0, 5 * sizeof(sbyte) - 1, "norm" }, { UFBX_MATERIAL_PBR_SHEEN_COLOR, UFBXI_SHADER_MAPPING_DEFAULT_W_1 | UFBXI_SHADER_MAPPING_WIDEN_TO_RGB, 0, 3 * sizeof(sbyte) - 1, "Ps" }, { UFBX_MATERIAL_PBR_COAT_FACTOR, 0, 0, 3 * sizeof(sbyte) - 1, "Pc" }, { UFBX_MATERIAL_PBR_COAT_ROUGHNESS, 0, 0, 4 * sizeof(sbyte) - 1, "Pcr" }, { UFBX_MATERIAL_PBR_SPECULAR_ANISOTROPY, 0, 0, 6 * sizeof(sbyte) - 1, "aniso" }, { UFBX_MATERIAL_PBR_SPECULAR_ROTATION, 0, 0, 7 * sizeof(sbyte) - 1, "anisor" } };
		public static ufbxi_shader_mapping[] ufbxi_obj_features = new ufbxi_shader_mapping[] { { UFBX_MATERIAL_FEATURE_PBR, UFBXI_SHADER_FEATURE_IF_EXISTS_OR_TEXTURE, 0, 3 * sizeof(sbyte) - 1, "Pr" }, { UFBX_MATERIAL_FEATURE_PBR, UFBXI_SHADER_FEATURE_IF_EXISTS_OR_TEXTURE, 0, 3 * sizeof(sbyte) - 1, "Pm" }, { UFBX_MATERIAL_FEATURE_SHEEN, UFBXI_SHADER_FEATURE_IF_EXISTS_OR_TEXTURE, 0, 3 * sizeof(sbyte) - 1, "Ps" }, { UFBX_MATERIAL_FEATURE_COAT, UFBXI_SHADER_FEATURE_IF_EXISTS_OR_TEXTURE, 0, 3 * sizeof(sbyte) - 1, "Pc" }, { UFBX_MATERIAL_FEATURE_METALNESS, UFBXI_SHADER_FEATURE_IF_EXISTS_OR_TEXTURE, 0, 3 * sizeof(sbyte) - 1, "Pm" }, { UFBX_MATERIAL_FEATURE_IOR, UFBXI_SHADER_FEATURE_IF_EXISTS_OR_TEXTURE, 0, 3 * sizeof(sbyte) - 1, "Ni" }, { UFBX_MATERIAL_FEATURE_OPACITY, UFBXI_SHADER_FEATURE_IF_EXISTS_OR_TEXTURE, 0, 2 * sizeof(sbyte) - 1, "d" }, { UFBX_MATERIAL_FEATURE_TRANSMISSION, UFBXI_SHADER_FEATURE_IF_EXISTS_OR_TEXTURE, 0, 3 * sizeof(sbyte) - 1, "Tf" }, { UFBX_MATERIAL_FEATURE_EMISSION, UFBXI_SHADER_FEATURE_IF_EXISTS_OR_TEXTURE, 0, 3 * sizeof(sbyte) - 1, "Ke" } };
		public static ufbxi_shader_mapping_list[] ufbxi_shader_pbr_mappings = new ufbxi_shader_mapping_list[] { { ufbxi_fbx_phong_shader_pbr_mapping, (16 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), null, 0, (uint)(UFBXI_MAT_DIFFUSE | UFBXI_MAT_SPECULAR | UFBXI_MAT_EMISSION | UFBXI_MAT_TRANSMISSION) }, { ufbxi_fbx_lambert_shader_pbr_mapping, (11 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), null, 0, (uint)(UFBXI_MAT_DIFFUSE | UFBXI_MAT_EMISSION | UFBXI_MAT_TRANSMISSION) }, { ufbxi_fbx_phong_shader_pbr_mapping, (16 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), null, 0, (uint)(UFBXI_MAT_DIFFUSE | UFBXI_MAT_SPECULAR | UFBXI_MAT_EMISSION | UFBXI_MAT_TRANSMISSION) }, { ufbxi_osl_standard_shader_pbr_mapping, (42 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), ufbxi_osl_standard_shader_features, (1 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), (uint)(UFBXI_MAT_PBR | UFBXI_MAT_METALNESS | UFBXI_MAT_DIFFUSE | UFBXI_MAT_SPECULAR | UFBXI_MAT_COAT | UFBXI_MAT_SHEEN | UFBXI_MAT_TRANSMISSION | UFBXI_MAT_OPACITY | UFBXI_MAT_IOR | UFBXI_MAT_DIFFUSE_ROUGHNESS) }, { ufbxi_arnold_shader_pbr_mapping, (47 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), ufbxi_arnold_shader_features, (5 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), (uint)(UFBXI_MAT_PBR | UFBXI_MAT_METALNESS | UFBXI_MAT_DIFFUSE | UFBXI_MAT_SPECULAR | UFBXI_MAT_COAT | UFBXI_MAT_SHEEN | UFBXI_MAT_TRANSMISSION | UFBXI_MAT_OPACITY | UFBXI_MAT_IOR | UFBXI_MAT_DIFFUSE_ROUGHNESS) }, { ufbxi_3ds_max_physical_material_pbr_mapping, (40 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), ufbxi_3ds_max_physical_material_features, (7 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), (uint)(UFBXI_MAT_PBR | UFBXI_MAT_METALNESS | UFBXI_MAT_DIFFUSE | UFBXI_MAT_COAT | UFBXI_MAT_SHEEN | UFBXI_MAT_TRANSMISSION | UFBXI_MAT_OPACITY | UFBXI_MAT_IOR), { null, 0 }, { "_map", 5 * sizeof(sbyte) - 1 }, { null, 0 }, { "_map_on", 8 * sizeof(sbyte) - 1 } }, { ufbxi_3ds_max_pbr_metal_rough_pbr_mapping, (11 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), ufbxi_3ds_max_pbr_features, (1 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), (uint)(UFBXI_MAT_PBR | UFBXI_MAT_METALNESS | UFBXI_MAT_DIFFUSE | UFBXI_MAT_OPACITY), { null, 0 }, { "_map", 5 * sizeof(sbyte) - 1 }, { null, 0 }, { null, 0 } }, { ufbxi_3ds_max_pbr_spec_gloss_pbr_mapping, (11 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), ufbxi_3ds_max_pbr_features, (1 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), (uint)(UFBXI_MAT_PBR | UFBXI_MAT_SPECULAR | UFBXI_MAT_DIFFUSE | UFBXI_MAT_OPACITY), { null, 0 }, { "_map", 5 * sizeof(sbyte) - 1 }, { null, 0 }, { null, 0 } }, { ufbxi_gltf_material_pbr_mapping, (19 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), ufbxi_gltf_material_features, (7 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), (uint)(UFBXI_MAT_PBR | UFBXI_MAT_METALNESS | UFBXI_MAT_DIFFUSE | UFBXI_MAT_EMISSION | UFBXI_MAT_OPACITY | UFBXI_MAT_AMBIENT_OCCLUSION), { null, 0 }, { "Map", 4 * sizeof(sbyte) - 1 }, { null, 0 }, { null, 0 } }, { ufbxi_shaderfx_graph_pbr_mapping, (8 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), null, 0, (uint)(UFBXI_MAT_PBR | UFBXI_MAT_METALNESS | UFBXI_MAT_DIFFUSE | UFBXI_MAT_EMISSION | UFBXI_MAT_AMBIENT_OCCLUSION), { "TEX_", 5 * sizeof(sbyte) - 1 }, { "_map", 5 * sizeof(sbyte) - 1 }, { "use_", 5 * sizeof(sbyte) - 1 }, { "_map", 5 * sizeof(sbyte) - 1 } }, { ufbxi_blender_phong_shader_pbr_mapping, (8 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), null, 0, (uint)(UFBXI_MAT_PBR | UFBXI_MAT_METALNESS | UFBXI_MAT_DIFFUSE | UFBXI_MAT_EMISSION) }, { ufbxi_obj_pbr_mapping, (17 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), ufbxi_obj_features, (9 * sizeof(ufbxi_shader_mapping) / sizeof(ufbxi_shader_mapping)), (uint)(UFBXI_MAT_DIFFUSE | UFBXI_MAT_SPECULAR) } };
		public static ufbxi_glossiness_remap[] ufbxi_glossiness_remaps = new ufbxi_glossiness_remap[] { { UFBX_MATERIAL_FEATURE_ROUGHNESS_AS_GLOSSINESS, UFBX_MATERIAL_PBR_ROUGHNESS, UFBX_MATERIAL_PBR_GLOSSINESS }, { UFBX_MATERIAL_FEATURE_COAT_ROUGHNESS_AS_GLOSSINESS, UFBX_MATERIAL_PBR_COAT_ROUGHNESS, UFBX_MATERIAL_PBR_COAT_GLOSSINESS }, { UFBX_MATERIAL_FEATURE_TRANSMISSION_ROUGHNESS_AS_GLOSSINESS, UFBX_MATERIAL_PBR_TRANSMISSION_ROUGHNESS, UFBX_MATERIAL_PBR_TRANSMISSION_GLOSSINESS } };
		public static ufbxi_constraint_prop[] ufbxi_constraint_props = new ufbxi_constraint_prop[] { { UFBXI_CONSTRAINT_PROP_NODE, "Constrained Object" }, { UFBXI_CONSTRAINT_PROP_NODE, "Constrained object (Child)" }, { UFBXI_CONSTRAINT_PROP_NODE, "First Joint" }, { UFBXI_CONSTRAINT_PROP_TARGET, "Source" }, { UFBXI_CONSTRAINT_PROP_TARGET, "Source (Parent)" }, { UFBXI_CONSTRAINT_PROP_TARGET, "Aim At Object" }, { UFBXI_CONSTRAINT_PROP_TARGET, "Pole Vector Object" }, { UFBXI_CONSTRAINT_PROP_IK_EFFECTOR, "Effector" }, { UFBXI_CONSTRAINT_PROP_IK_END_NODE, "End Joint" }, { UFBXI_CONSTRAINT_PROP_AIM_UP, "World Up Object" } };
		public static ufbxi_file_shader[] ufbxi_file_shaders = new ufbxi_file_shader[] { { (0x7e73161fad53b12aUL L ), "ai_image", "filename" }, { 0, "OSLBitmap", ufbxi_Filename }, { 0, "OSLBitmap2", ufbxi_Filename }, { 0, "UberBitmap", ufbxi_Filename }, { 0, "UberBitmap2", ufbxi_Filename } };
		public static ufbxi_aperture_format[] ufbxi_aperture_formats = new ufbxi_aperture_format[] { { 1000, 1000 }, { 404, 295 }, { 493, 292 }, { 864, 630 }, { 816, 612 }, { 980, 735 }, { 825, 446 }, { 864, 732 }, { 2066, 906 }, { 1485, 991 }, { 2080, 1480 }, { 2772, 2072 } };
		public static float[] ufbxi_time_mode_fps = new float[] { 24.0f, 120.0f, 100.0f, 60.0f, 50.0f, 48.0f, 30.0f, 30.0f, 29.97f, 29.97f, 25.0f, 24.0f, 1000.0f, 23.976f, 24.0f, 96.0f, 72.0f, 59.94f };
		public static float[] ufbxi_pow10_targets = new float[] { 0.0f, (float)(1e-8), (float)(1e-7), (float)(1e-6), (float)(1e-5), (float)(1e-4), (float)(1e-3), (float)(1e-2), (float)(1e-1), (float)(1e+0), (float)(1e+1), (float)(1e+2), (float)(1e+3), (float)(1e+4), (float)(1e+5), (float)(1e+6), (float)(1e+7), (float)(1e+8), (float)(1e+9) };
		public static byte[] ufbxi_cache_data_format_size = new byte[] { 0, 4, 12, 8, 24 };
		public static ufbxi_cache_interpretation_name[] ufbxi_cache_interpretation_names = new ufbxi_cache_interpretation_name[] { { UFBX_CACHE_INTERPRETATION_POINTS, "\\cpoints?" }, { UFBX_CACHE_INTERPRETATION_VERTEX_POSITION, "\\cpositions?" }, { UFBX_CACHE_INTERPRETATION_VERTEX_NORMAL, "\\cnormals?" } };
		public static sbyte[,] ufbxi_finalize_shader_texture_name_props = new sbyte[] { "3dsMax|params|OSLShaderName" };
		public static sbyte[,] ufbxi_finalize_shader_texture_source_props = new sbyte[] { "3dsMax|params|OSLCode" };
	}
}